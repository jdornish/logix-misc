<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--Sample Eaton UPS SNMP Program-->
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="32.04" TargetName="EatonUPS" TargetType="Program" ContainsContext="true" Owner="J. Dornish" ExportDate="Fri Jan 07 08:14:16 2022" ExportOptions="References NoRawData L5KData DecoratedData Context Dependencies ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Context" Name="EatonSNMP">
<DataTypes Use="Context">
<DataType Name="SLO_Eaton_UPS_Data" Family="NoFamily" Class="User">
<Description>
<![CDATA[Eaton UPS Data from SNMP]]>
</Description>
<Members>
<Member Name="Input_Voltage" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Voltage]]>
</Description>
</Member>
<Member Name="Battery_Capacity" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Battery Capacity %]]>
</Description>
</Member>
<Member Name="Input_Frequency" DataType="REAL" Dimension="0" Radix="Float" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Frequency]]>
</Description>
</Member>
<Member Name="Battery_Runtime_Remain" DataType="REAL" Dimension="0" Radix="Float" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Battery Runtime Remaining (Mins)]]>
</Description>
</Member>
<Member Name="Alarm_Count" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of Current Alarms]]>
</Description>
</Member>
<Member Name="ZZZZZZZZZZSLO_Eaton_5" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="On_Battery_Alarm" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS On Battery]]>
</Description>
</Member>
<Member Name="Low_Battery_Alarm" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS Low Battery]]>
</Description>
</Member>
<Member Name="Output_Overload_Alarm" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="2" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS Output Overload]]>
</Description>
</Member>
<Member Name="Internal_Failure_Alarm" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="3" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS  Internal Failure]]>
</Description>
</Member>
<Member Name="Temp_Bad" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="4" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS Ambient Temp Bad]]>
</Description>
</Member>
<Member Name="COMM_Fault" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_Eaton_5" BitNumber="5" ExternalAccess="Read/Write">
<Description>
<![CDATA[UPS Communications Fault]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="SLO_SNMP_Connection_Data" Family="NoFamily" Class="User">
<Description>
<![CDATA[Data for Message Blocks]]>
</Description>
<Members>
<Member Name="Socket_Create_Input" DataType="SLO_Socket_CreateParams" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input for MSG block for Socket Create]]>
</Description>
</Member>
<Member Name="Socket_Create_Output" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output for MSG block for Socket Create]]>
</Description>
</Member>
<Member Name="Socket_Write_Input" DataType="SLO_Socket_WriteParams" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input for MSG block for Socket Write]]>
</Description>
</Member>
<Member Name="Socket_Write_Output" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output for MSG block for Socket Write]]>
</Description>
</Member>
<Member Name="Socket_Read_Input" DataType="SLO_Socket_ReadParams" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input for MSG block for Socket Read]]>
</Description>
</Member>
<Member Name="Socket_Read_Output" DataType="SLO_Socket_ReadResponse" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output for MSG block for Socket Read]]>
</Description>
</Member>
<Member Name="Read_Response_Timer" DataType="TIMER" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time Delay for Reading a Response]]>
</Description>
</Member>
<Member Name="ONS" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oneshots]]>
</Description>
</Member>
<Member Name="Error_Retry_Timer" DataType="TIMER" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Timeout between retrys following errors]]>
</Description>
</Member>
<Member Name="ZZZZZZZZZZSLO_SNMP_C9" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="Retrying" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_C9" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[Error Encountered: Retrying]]>
</Description>
</Member>
<Member Name="Send_Packet_Req" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_C9" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[Request to Send a Packet]]>
</Description>
</Member>
<Member Name="Enable_COMMs" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_C9" BitNumber="2" ExternalAccess="Read/Write">
<Description>
<![CDATA[Enable  SNMP Communications]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="SLO_Socket_CreateParams"/>
<Dependency Type="DataType" Name="SLO_Socket_WriteParams"/>
<Dependency Type="DataType" Name="SLO_Socket_ReadParams"/>
<Dependency Type="DataType" Name="SLO_Socket_ReadResponse"/>
</Dependencies>
</DataType>
<DataType Name="SLO_SNMP_Request_Data" Family="NoFamily" Class="User">
<Description>
<![CDATA[Data for SLO_SNMP_Packet_Build]]>
</Description>
<Members>
<Member Name="IP_Address" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target IP Address of remote device (e.g. 192.168.20.2).]]>
</Description>
</Member>
<Member Name="Community" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Read Community String (e.g. public)]]>
</Description>
</Member>
<Member Name="OID" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[OID String to read (e.g. 1.3.6.1.4.1.534.1.3.4.1.2).  
Note: OID members can have a max value of 268435455]]>
</Description>
</Member>
<Member Name="RequestID" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Request ID - (Incrementing or random integer) 
Note: will be converted to unsigned int]]>
</Description>
</Member>
<Member Name="ZZZZZZZZZZSLO_SNMP_R4" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="Enabled" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_R4" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[Enable / Disable Flag]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="SLO_SNMP_Response_Data" Family="NoFamily" Class="User">
<Description>
<![CDATA[Data for SLO_SNMP_Packet_Parse]]>
</Description>
<Members>
<Member Name="Community" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Community]]>
</Description>
</Member>
<Member Name="OID" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP OID]]>
</Description>
</Member>
<Member Name="String" DataType="STRING" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output String]]>
</Description>
</Member>
<Member Name="DINT" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output DINT]]>
</Description>
</Member>
<Member Name="Bytes" DataType="SINT" Dimension="128" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output Bytes]]>
</Description>
</Member>
<Member Name="ZZZZZZZZZZSLO_SNMP_R5" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="Is_String" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_R5" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output is String]]>
</Description>
</Member>
<Member Name="Is_DINT" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_R5" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output is DINT]]>
</Description>
</Member>
<Member Name="Is_Other" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZSLO_SNMP_R5" BitNumber="2" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output is Other / Unrecognized]]>
</Description>
</Member>
<Member Name="ErrorValue" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Output Error Value]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="SLO_Socket_CreateParams" Family="NoFamily" Class="User">
<Description>
<![CDATA[Socket Accept Response]]>
</Description>
<Members>
<Member Name="Instance" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Specify Protocol - 1 for TCP, 2 for UDP]]>
</Description>
</Member>
<Member Name="Addr" DataType="SLO_Socket_SockAddr" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Address Information - Leave Port and IP 0 for Any]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="SLO_Socket_SockAddr"/>
</Dependencies>
</DataType>
<DataType Name="SLO_Socket_ReadParams" Family="NoFamily" Class="User">
<Description>
<![CDATA[Socket Read Parameters]]>
</Description>
<Members>
<Member Name="Timeout" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Timeout in Milliseconds]]>
</Description>
</Member>
<Member Name="BufLen" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of Bytes to Receive]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="SLO_Socket_ReadResponse" Family="NoFamily" Class="User">
<Description>
<![CDATA[Socket Read Response]]>
</Description>
<Members>
<Member Name="FromAddr" DataType="SLO_Socket_SockAddr" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Data structure of device sending UDP data]]>
</Description>
</Member>
<Member Name="BufLen" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Length (bytes) of data received]]>
</Description>
</Member>
<Member Name="Buf" DataType="SINT" Dimension="484" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Array of returned data]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="SLO_Socket_SockAddr"/>
</Dependencies>
</DataType>
<DataType Name="SLO_Socket_SockAddr" Family="NoFamily" Class="User">
<Description>
<![CDATA[Socket Read Response]]>
</Description>
<Members>
<Member Name="Family" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Address Family - Must be 2]]>
</Description>
</Member>
<Member Name="Port" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Port Number]]>
</Description>
</Member>
<Member Name="Addr" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[IP Address (Hex format)]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="SLO_Socket_WriteParams" Family="NoFamily" Class="User">
<Description>
<![CDATA[Socket Write Parameters]]>
</Description>
<Members>
<Member Name="Timeout" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Timeout in Milliseconds]]>
</Description>
</Member>
<Member Name="ToAddr" DataType="SLO_Socket_SockAddr" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Address structure for UDP]]>
</Description>
</Member>
<Member Name="BufLen" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of bytes to Send]]>
</Description>
</Member>
<Member Name="Buf" DataType="SINT" Dimension="484" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Data to Send]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="SLO_Socket_SockAddr"/>
</Dependencies>
</DataType>
</DataTypes>
<AddOnInstructionDefinitions Use="Context">
<AddOnInstructionDefinition Name="SLO_SNMP_Packet_Build" Revision="1.1" Vendor="J. Dornish" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2019-08-21T16:57:57.087Z" CreatedBy="Not Available" EditedDate="2022-01-07T16:07:38.099Z" EditedBy="Not Available" SoftwareRevision="v32.04"
>
<Description>
<![CDATA[Builds an SNMP v1 Get packet.

Requires SLO_SNMP_Request_Data input
Builds packet into SLO_Socket_WriteParams for output to Socket Write.]]>
</Description>
<RevisionNote>
<![CDATA[v1.1 - Fix unsigned - signed conversion fault in SNMP PDU creation

v1.0 - by JDornish.
Builds an SNMP packet from parameters.
Currently supports SNMP v1, and Get-Next packets]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[2019 by Jason Dornish

Note: 
This block may not output standards complaint SNMP traffic.  It SHOULD, but this has not been fully tested.
Max OID segment value is 268435456 (4 Byte 7-bit number), due to DINT limitations.  Hopefully this will not be an issue.

This block is released under the MIT license.]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Packet" TagType="Base" DataType="SINT" Dimensions="484" Usage="InOut" Radix="Hex" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[SNMP Packet to build (Socket_WriteParams.Buf)]]>
</Description>
</Parameter>
<Parameter Name="BufLen" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Packet Length (Socket_WriteParams.BufLen)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Community" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[SNMP String (ex: public)]]>
</Description>
</Parameter>
<Parameter Name="OID" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[OID to Request (ex: 1.3.1.x.x.x.)]]>
</Description>
</Parameter>
<Parameter Name="IP_Address_In" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Target IP Address in Numerical Format]]>
</Description>
</Parameter>
<Parameter Name="RequestID" TagType="Base" DataType="INT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[SNMP Request ID]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="IP_Address_Out" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Target IP Address in Hex Format (Socket_WriteParams.ToAddr.Addr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="IP_Address_Invalid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Target IP Address is Invalid]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OID_Invalid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[OID Input is Invalid]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="RequestID_Invalid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Request ID is Invalid]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="I" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Iterator #1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="J" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Iterator #2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CurrentByte" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Currently Used Byte]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="PDU_Length_Index" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[PDU Length Byte Location Index]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="IP_Address_Invalid_Flag" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Use for flagging invalid IP addresses]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="VarBindList_Length_Index" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[VarBin Listd Length Byte Location Index]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="VarBind_Length_Index" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[VarBind Length Byte Location Index]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_INT_1" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Temporary Integer 1 for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_INT_2" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Temporary Integer 2 for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OID_Invalid_Flag" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Use for flagging invalid OIDs]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OID_Length_Index" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[OID Length Byte Location Index]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_DINT" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Temporary Holding Integer for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_STRING" DataType="STRING" ExternalAccess="None">
<Description>
<![CDATA[Temporary Holding String fo Internal use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_ARRAY_1" DataType="SINT" Dimensions="64" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Tempoary Array for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="SINT" Dimensions="64" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
<Element Index="[3]" Value="0"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="0"/>
<Element Index="[6]" Value="0"/>
<Element Index="[7]" Value="0"/>
<Element Index="[8]" Value="0"/>
<Element Index="[9]" Value="0"/>
<Element Index="[10]" Value="0"/>
<Element Index="[11]" Value="0"/>
<Element Index="[12]" Value="0"/>
<Element Index="[13]" Value="0"/>
<Element Index="[14]" Value="0"/>
<Element Index="[15]" Value="0"/>
<Element Index="[16]" Value="0"/>
<Element Index="[17]" Value="0"/>
<Element Index="[18]" Value="0"/>
<Element Index="[19]" Value="0"/>
<Element Index="[20]" Value="0"/>
<Element Index="[21]" Value="0"/>
<Element Index="[22]" Value="0"/>
<Element Index="[23]" Value="0"/>
<Element Index="[24]" Value="0"/>
<Element Index="[25]" Value="0"/>
<Element Index="[26]" Value="0"/>
<Element Index="[27]" Value="0"/>
<Element Index="[28]" Value="0"/>
<Element Index="[29]" Value="0"/>
<Element Index="[30]" Value="0"/>
<Element Index="[31]" Value="0"/>
<Element Index="[32]" Value="0"/>
<Element Index="[33]" Value="0"/>
<Element Index="[34]" Value="0"/>
<Element Index="[35]" Value="0"/>
<Element Index="[36]" Value="0"/>
<Element Index="[37]" Value="0"/>
<Element Index="[38]" Value="0"/>
<Element Index="[39]" Value="0"/>
<Element Index="[40]" Value="0"/>
<Element Index="[41]" Value="0"/>
<Element Index="[42]" Value="0"/>
<Element Index="[43]" Value="0"/>
<Element Index="[44]" Value="0"/>
<Element Index="[45]" Value="0"/>
<Element Index="[46]" Value="0"/>
<Element Index="[47]" Value="0"/>
<Element Index="[48]" Value="0"/>
<Element Index="[49]" Value="0"/>
<Element Index="[50]" Value="0"/>
<Element Index="[51]" Value="0"/>
<Element Index="[52]" Value="0"/>
<Element Index="[53]" Value="0"/>
<Element Index="[54]" Value="0"/>
<Element Index="[55]" Value="0"/>
<Element Index="[56]" Value="0"/>
<Element Index="[57]" Value="0"/>
<Element Index="[58]" Value="0"/>
<Element Index="[59]" Value="0"/>
<Element Index="[60]" Value="0"/>
<Element Index="[61]" Value="0"/>
<Element Index="[62]" Value="0"/>
<Element Index="[63]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_ARRAY_2" DataType="INT" Dimensions="64" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Temporary Array for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="INT" Dimensions="64" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
<Element Index="[3]" Value="0"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="0"/>
<Element Index="[6]" Value="0"/>
<Element Index="[7]" Value="0"/>
<Element Index="[8]" Value="0"/>
<Element Index="[9]" Value="0"/>
<Element Index="[10]" Value="0"/>
<Element Index="[11]" Value="0"/>
<Element Index="[12]" Value="0"/>
<Element Index="[13]" Value="0"/>
<Element Index="[14]" Value="0"/>
<Element Index="[15]" Value="0"/>
<Element Index="[16]" Value="0"/>
<Element Index="[17]" Value="0"/>
<Element Index="[18]" Value="0"/>
<Element Index="[19]" Value="0"/>
<Element Index="[20]" Value="0"/>
<Element Index="[21]" Value="0"/>
<Element Index="[22]" Value="0"/>
<Element Index="[23]" Value="0"/>
<Element Index="[24]" Value="0"/>
<Element Index="[25]" Value="0"/>
<Element Index="[26]" Value="0"/>
<Element Index="[27]" Value="0"/>
<Element Index="[28]" Value="0"/>
<Element Index="[29]" Value="0"/>
<Element Index="[30]" Value="0"/>
<Element Index="[31]" Value="0"/>
<Element Index="[32]" Value="0"/>
<Element Index="[33]" Value="0"/>
<Element Index="[34]" Value="0"/>
<Element Index="[35]" Value="0"/>
<Element Index="[36]" Value="0"/>
<Element Index="[37]" Value="0"/>
<Element Index="[38]" Value="0"/>
<Element Index="[39]" Value="0"/>
<Element Index="[40]" Value="0"/>
<Element Index="[41]" Value="0"/>
<Element Index="[42]" Value="0"/>
<Element Index="[43]" Value="0"/>
<Element Index="[44]" Value="0"/>
<Element Index="[45]" Value="0"/>
<Element Index="[46]" Value="0"/>
<Element Index="[47]" Value="0"/>
<Element Index="[48]" Value="0"/>
<Element Index="[49]" Value="0"/>
<Element Index="[50]" Value="0"/>
<Element Index="[51]" Value="0"/>
<Element Index="[52]" Value="0"/>
<Element Index="[53]" Value="0"/>
<Element Index="[54]" Value="0"/>
<Element Index="[55]" Value="0"/>
<Element Index="[56]" Value="0"/>
<Element Index="[57]" Value="0"/>
<Element Index="[58]" Value="0"/>
<Element Index="[59]" Value="0"/>
<Element Index="[60]" Value="0"/>
<Element Index="[61]" Value="0"/>
<Element Index="[62]" Value="0"/>
<Element Index="[63]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[/* SNMP Packet Create]]>
</Line>
<Line Number="1">
<![CDATA[Provided under MIT license]]>
</Line>
<Line Number="2">
<![CDATA[Copyright 2019 by Jason Dornish]]>
</Line>
<Line Number="3">
<![CDATA[Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:]]>
</Line>
<Line Number="4">
<![CDATA[The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.]]>
</Line>
<Line Number="5">
<![CDATA[THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.]]>
</Line>
<Line Number="6">
<![CDATA[]]>
</Line>
<Line Number="7">
<![CDATA[Builds an SNMP GetRequest packet for an Allen Bradley Logix processor supporting sockets.  Tested on CompactLogix(TM) L24 processor series.]]>
</Line>
<Line Number="8">
<![CDATA[]]>
</Line>
<Line Number="9">
<![CDATA[v.1.00 - Initial Build]]>
</Line>
<Line Number="10">
<![CDATA[Note: Currently supports SNMP v1 only]]>
</Line>
<Line Number="11">
<![CDATA[]]>
</Line>
<Line Number="12">
<![CDATA[*/]]>
</Line>
<Line Number="13">
<![CDATA[]]>
</Line>
<Line Number="14">
<![CDATA[/* Convert IP address from decimal array to hex, for MSG use]]>
</Line>
<Line Number="15">
<![CDATA[Steps: ]]>
</Line>
<Line Number="16">
<![CDATA[1. Initialize temporary arrays.]]>
</Line>
<Line Number="17">
<![CDATA[2. Find all '.' characters in the IP string.]]>
</Line>
<Line Number="18">
<![CDATA[2a. If there are not 3 '.' characters, invalid IP string detected.]]>
</Line>
<Line Number="19">
<![CDATA[3. Split the string based on the found '.' characters, into an array of integer octets.]]>
</Line>
<Line Number="20">
<![CDATA[3a. Check each octet is between 0-255.]]>
</Line>
<Line Number="21">
<![CDATA[]]>
</Line>
<Line Number="22">
<![CDATA[]]>
</Line>
<Line Number="23">
<![CDATA[]]>
</Line>
<Line Number="24">
<![CDATA[*/]]>
</Line>
<Line Number="25">
<![CDATA[]]>
</Line>
<Line Number="26">
<![CDATA[// Clear the old packet]]>
</Line>
<Line Number="27">
<![CDATA[FOR I := 0 TO 483 BY 1 DO]]>
</Line>
<Line Number="28">
<![CDATA[	Packet[I] := 0;]]>
</Line>
<Line Number="29">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="30">
<![CDATA[]]>
</Line>
<Line Number="31">
<![CDATA[// Check IP address basic validity (Octet > 0, Octet < 256)]]>
</Line>
<Line Number="32">
<![CDATA[IP_Address_Invalid_Flag := 0;	//Step 1 - Reset the invalid flag]]>
</Line>
<Line Number="33">
<![CDATA[]]>
</Line>
<Line Number="34">
<![CDATA[J := 0;							// Clear temporary holding iterator]]>
</Line>
<Line Number="35">
<![CDATA[FOR I := 0 TO 63 BY 1 DO		// Clear the temporary arrays by writing 0 to all elements]]>
</Line>
<Line Number="36">
<![CDATA[	TEMP_ARRAY_1[I] := 0;]]>
</Line>
<Line Number="37">
<![CDATA[	TEMP_ARRAY_2[I] := 0;]]>
</Line>
<Line Number="38">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="39">
<![CDATA[]]>
</Line>
<Line Number="40">
<![CDATA[FOR I := 0 TO IP_Address_In.LEN-1 BY 1 DO	//Step 2 - Iterate on each character in the string]]>
</Line>
<Line Number="41">
<![CDATA[	IF IP_Address_In.DATA[I] = 46 THEN		//If the IP address character =  '.' (char 46)]]>
</Line>
<Line Number="42">
<![CDATA[		TEMP_ARRAY_2[J] := I;					//Log its location into the Temp Array, as it is an octet separator]]>
</Line>
<Line Number="43">
<![CDATA[		J := J + 1;]]>
</Line>
<Line Number="44">
<![CDATA[	ELSIF IP_Address_In.DATA[I] < 48 OR IP_Address_In.DATA[I] > 57 THEN	//If we detect a character that is not 0-9]]>
</Line>
<Line Number="45">
<![CDATA[		IP_Address_Invalid_Flag := 1;		//Flag the address as invalid]]>
</Line>
<Line Number="46">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="47">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="48">
<![CDATA[]]>
</Line>
<Line Number="49">
<![CDATA[IF J <> 3 THEN								//If we did not finx 4 IP address octets (.s)]]>
</Line>
<Line Number="50">
<![CDATA[	IP_Address_Invalid_Flag := 1;			//Then flag the address as invalid]]>
</Line>
<Line Number="51">
<![CDATA[ELSIF NOT IP_Address_Invalid_Flag THEN		//If we did find 4 IP address octets, check if the address has not been flagged as invalid anywhere]]>
</Line>
<Line Number="52">
<![CDATA[	//Parse Octet #1]]>
</Line>
<Line Number="53">
<![CDATA[		MID(IP_Address_In,TEMP_ARRAY_2[0],1,TEMP_STRING);		//Parse the first octet out of the string	(from position 0 to first decimal)]]>
</Line>
<Line Number="54">
<![CDATA[		STOD(TEMP_STRING,TEMP_DINT);							//Convert the octet to a DINT]]>
</Line>
<Line Number="55">
<![CDATA[		IF TEMP_DINT < 0 OR TEMP_DINT > 255 THEN	// Check octet bounds]]>
</Line>
<Line Number="56">
<![CDATA[			IP_Address_Invalid_Flag := 1;			// If we are out of bounds, throw an invalid flag, ]]>
</Line>
<Line Number="57">
<![CDATA[			TEMP_ARRAY_1[3]:=0;						// Clear the temporary array for that octet]]>
</Line>
<Line Number="58">
<![CDATA[		ELSE]]>
</Line>
<Line Number="59">
<![CDATA[			CPS(TEMP_DINT,TEMP_ARRAY_1[3],1);		//Copy the octet into the temporary array (reverse order)]]>
</Line>
<Line Number="60">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="61">
<![CDATA[	//Parse Octet #2]]>
</Line>
<Line Number="62">
<![CDATA[		TEMP_INT_1 := TEMP_ARRAY_2[1]-TEMP_ARRAY_2[0]-1;			//Parse length = 2nd decimal position - 1st decimal position - 1 (for offset difference)]]>
</Line>
<Line Number="63">
<![CDATA[		TEMP_INT_2 := TEMP_ARRAY_2[0]+2;							//Parse Start = 1st decimal position + 2 (1 to offset, 1 for position after decimal)]]>
</Line>
<Line Number="64">
<![CDATA[		MID(IP_Address_In,TEMP_INT_1,TEMP_INT_2,TEMP_STRING);	//Parse the second octet out of the string]]>
</Line>
<Line Number="65">
<![CDATA[		STOD(TEMP_STRING,TEMP_DINT);							//Convert the octet to a DINT]]>
</Line>
<Line Number="66">
<![CDATA[		IF TEMP_DINT < 0 OR TEMP_DINT > 255 THEN	// Check octet bounds]]>
</Line>
<Line Number="67">
<![CDATA[			IP_Address_Invalid_Flag := 1;			// If we are out of bounds, throw an invalid flag, ]]>
</Line>
<Line Number="68">
<![CDATA[			TEMP_ARRAY_1[2]:=0;						// Clear the temporary array for that octet]]>
</Line>
<Line Number="69">
<![CDATA[		ELSE]]>
</Line>
<Line Number="70">
<![CDATA[			CPS(TEMP_DINT,TEMP_ARRAY_1[2],1);		//Copy the octet into the temporary array]]>
</Line>
<Line Number="71">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="72">
<![CDATA[	//Parse Octet #3]]>
</Line>
<Line Number="73">
<![CDATA[		TEMP_INT_1 := TEMP_ARRAY_2[2]-TEMP_ARRAY_2[1]-1;			//Parse length = 3rd decimal position - 2nd decimal position - 1 (for offset difference)]]>
</Line>
<Line Number="74">
<![CDATA[		TEMP_INT_2 := TEMP_ARRAY_2[1]+2;							//Parse Start = 2nd decimal position + 2 (1 to offset, 1 for position after decimal)]]>
</Line>
<Line Number="75">
<![CDATA[		MID(IP_Address_In,TEMP_INT_1,TEMP_INT_2,TEMP_STRING);	//Parse the 3rd octet out of the string]]>
</Line>
<Line Number="76">
<![CDATA[		STOD(TEMP_STRING,TEMP_DINT);							//Convert the octet to a DINT]]>
</Line>
<Line Number="77">
<![CDATA[		IF TEMP_DINT < 0 OR TEMP_DINT > 255 THEN	// Check octet bounds]]>
</Line>
<Line Number="78">
<![CDATA[			IP_Address_Invalid_Flag := 1;			// If we are out of bounds, throw an invalid flag, ]]>
</Line>
<Line Number="79">
<![CDATA[			TEMP_ARRAY_1[1]:=0;						// Clear the temporary array for that octet]]>
</Line>
<Line Number="80">
<![CDATA[		ELSE]]>
</Line>
<Line Number="81">
<![CDATA[			CPS(TEMP_DINT,TEMP_ARRAY_1[1],1);		//Copy the octet into the temporary array]]>
</Line>
<Line Number="82">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="83">
<![CDATA[	//Parse Octet #3]]>
</Line>
<Line Number="84">
<![CDATA[		TEMP_INT_1 := IP_Address_In.LEN-TEMP_ARRAY_2[2]-1;		//Parse length = Total Length - 3rd decimal position - 1 (for offset difference)]]>
</Line>
<Line Number="85">
<![CDATA[		TEMP_INT_2 := TEMP_ARRAY_2[2]+2;						//Parse Start = 3rd decimal position + 2 (1 to offset, 1 for position after decimal)]]>
</Line>
<Line Number="86">
<![CDATA[		MID(IP_Address_In,TEMP_INT_1,TEMP_INT_2,TEMP_STRING);	//Parse the fourth octet out of the string]]>
</Line>
<Line Number="87">
<![CDATA[		STOD(TEMP_STRING,TEMP_DINT);							//Convert the octet to a DINT]]>
</Line>
<Line Number="88">
<![CDATA[		IF TEMP_DINT < 0 OR TEMP_DINT > 255 THEN	// Check octet bounds]]>
</Line>
<Line Number="89">
<![CDATA[			IP_Address_Invalid_Flag := 1;			// If we are out of bounds, throw an invalid flag, ]]>
</Line>
<Line Number="90">
<![CDATA[			TEMP_ARRAY_1[0]:=0;						// Clear the temporary array for that octet]]>
</Line>
<Line Number="91">
<![CDATA[		ELSE]]>
</Line>
<Line Number="92">
<![CDATA[			CPS(TEMP_DINT,TEMP_ARRAY_1[0],1);		//Copy the octet into the temporary array]]>
</Line>
<Line Number="93">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="94">
<![CDATA[	//Copy the array into the final DINT]]>
</Line>
<Line Number="95">
<![CDATA[	COP(TEMP_ARRAY_1[0],IP_Address_Out,4);]]>
</Line>
<Line Number="96">
<![CDATA[END_IF;]]>
</Line>
<Line Number="97">
<![CDATA[]]>
</Line>
<Line Number="98">
<![CDATA[IP_Address_Invalid := IP_Address_Invalid_Flag;	//Step 3 - Set the invalid bit to the flag.  This prevents the bit from flapping each scan]]>
</Line>
<Line Number="99">
<![CDATA[]]>
</Line>
<Line Number="100">
<![CDATA[/* Create SNMP Packet Header]]>
</Line>
<Line Number="101">
<![CDATA[Format is:]]>
</Line>
<Line Number="102">
<![CDATA[ [0] Packet Type]]>
</Line>
<Line Number="103">
<![CDATA[ [1] Packet Length]]>
</Line>
<Line Number="104">
<![CDATA[ [2-4] SNMP Version]]>
</Line>
<Line Number="105">
<![CDATA[ [5-n] SNMP Community Block]]>
</Line>
<Line Number="106">
<![CDATA[ [n+1-m] SNMP PDU Block]]>
</Line>
<Line Number="107">
<![CDATA[]]>
</Line>
<Line Number="108">
<![CDATA[*/]]>
</Line>
<Line Number="109">
<![CDATA[Packet[0] := 16#30;	//0 Type = Sequence]]>
</Line>
<Line Number="110">
<![CDATA[//Packet[1] := 16#2a;	//1 Length = 42 bytes (= version_length + 2 + community_length + 2 + getrequest_length + 2)]]>
</Line>
<Line Number="111">
<![CDATA[]]>
</Line>
<Line Number="112">
<![CDATA[]]>
</Line>
<Line Number="113">
<![CDATA[/* Create SNMP Version Block]]>
</Line>
<Line Number="114">
<![CDATA[Format is:]]>
</Line>
<Line Number="115">
<![CDATA[ [0] Version Type]]>
</Line>
<Line Number="116">
<![CDATA[ [1] Version Length]]>
</Line>
<Line Number="117">
<![CDATA[ [2] Version Value]]>
</Line>
<Line Number="118">
<![CDATA[*/]]>
</Line>
<Line Number="119">
<![CDATA[Packet[2] := 16#02;	//2 SNMP Version - Type = Integer]]>
</Line>
<Line Number="120">
<![CDATA[Packet[3] := 16#01;	//3 SNMP Version - Length = 1]]>
</Line>
<Line Number="121">
<![CDATA[Packet[4] := 16#00;	//4 SNMP Version[0] - V1 = 00h]]>
</Line>
<Line Number="122">
<![CDATA[]]>
</Line>
<Line Number="123">
<![CDATA[/* Create SNMP Community Block]]>
</Line>
<Line Number="124">
<![CDATA[Format is:]]>
</Line>
<Line Number="125">
<![CDATA[ [0] Community String Type]]>
</Line>
<Line Number="126">
<![CDATA[ [1] Community String Length]]>
</Line>
<Line Number="127">
<![CDATA[ [2-n] Community String Value]]>
</Line>
<Line Number="128">
<![CDATA[]]>
</Line>
<Line Number="129">
<![CDATA[*/]]>
</Line>
<Line Number="130">
<![CDATA[I := 0;		//Reset iterator #1 for re-use]]>
</Line>
<Line Number="131">
<![CDATA[// Note: CurrentByte is also reset here by the FOR loop]]>
</Line>
<Line Number="132">
<![CDATA[FOR CurrentByte := Packet[3] + 4 TO Packet[3] + 4 + Community.LEN + 1 BY 1 DO		//For packets after SNMP version field (4 + version field length - 1 + 2 for header)]]>
</Line>
<Line Number="133">
<![CDATA[	IF CurrentByte = Packet[3] + 4 THEN]]>
</Line>
<Line Number="134">
<![CDATA[		Packet[CurrentByte] := 16#04;		// If this is the first byte after the Version, set Community Type = Octet String = 04h]]>
</Line>
<Line Number="135">
<![CDATA[	ELSIF CurrentByte = Packet[3] + 5 THEN]]>
</Line>
<Line Number="136">
<![CDATA[		Packet[CurrentByte] := Community.LEN;	//If this is the second byte after the Version, set Community Length to the length of the string]]>
</Line>
<Line Number="137">
<![CDATA[	ELSE]]>
</Line>
<Line Number="138">
<![CDATA[		COP(Community.DATA[I],Packet[CurrentByte],1);	// Copy the current byte in the string to the packet]]>
</Line>
<Line Number="139">
<![CDATA[		I := I + 1;	// Increment the byte in the string we are copying]]>
</Line>
<Line Number="140">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="141">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="142">
<![CDATA[]]>
</Line>
<Line Number="143">
<![CDATA[]]>
</Line>
<Line Number="144">
<![CDATA[/* Create SNMP PDU]]>
</Line>
<Line Number="145">
<![CDATA[Format is:]]>
</Line>
<Line Number="146">
<![CDATA[ [0] PDU Type]]>
</Line>
<Line Number="147">
<![CDATA[ [1] PDU Length]]>
</Line>
<Line Number="148">
<![CDATA[ [2-n] RequestID Block]]>
</Line>
<Line Number="149">
<![CDATA[ [n+1-m] Error Block]]>
</Line>
<Line Number="150">
<![CDATA[ [m+1-o] Error Index Block]]>
</Line>
<Line Number="151">
<![CDATA[ [o+1-p] VarBind List]]>
</Line>
<Line Number="152">
<![CDATA[*/]]>
</Line>
<Line Number="153">
<![CDATA[Packet[CurrentByte] := -95;		//  Type = 16#a0 = Get-Request (16#a1 = Get-Next-Request) - Note - 16#a1 = 161 unsigned = -95 signed]]>
</Line>
<Line Number="154">
<![CDATA[PDU_Length_Index := CurrentByte + 1;	// Save the PDU Length byte location for later, when we can calculate (= RequestID_length + 2 + Error_Length + 2 + ErrorIndex_Length + 2 + VarBindList_Length + 2)]]>
</Line>
<Line Number="155">
<![CDATA[CurrentByte := CurrentByte + 2;		// Increment the current byte past the block]]>
</Line>
<Line Number="156">
<![CDATA[]]>
</Line>
<Line Number="157">
<![CDATA[/* Create PDU Request ID block:]]>
</Line>
<Line Number="158">
<![CDATA[ Format is:]]>
</Line>
<Line Number="159">
<![CDATA[ [0] RequestID Type]]>
</Line>
<Line Number="160">
<![CDATA[ [1] RequestID Length]]>
</Line>
<Line Number="161">
<![CDATA[ [2-n] RequestID Value]]>
</Line>
<Line Number="162">
<![CDATA[*/]]>
</Line>
<Line Number="163">
<![CDATA[Packet[CurrentByte] := 16#02;	//15 - RequestID - Type = Integer]]>
</Line>
<Line Number="164">
<![CDATA[Packet[CurrentByte+1] := 16#01;	//16 - RequestID - Length = 1]]>
</Line>
<Line Number="165">
<![CDATA[IF RequestID < 0 OR RequestID > 255 THEN	// Check if RequestID is invalid (this program does not yet support RequestIDs longer than 1 byte)]]>
</Line>
<Line Number="166">
<![CDATA[	RequestID_Invalid := 1;]]>
</Line>
<Line Number="167">
<![CDATA[	Packet[CurrentByte+2] := 16#00;	// RequestID specified is invalid, Set Request ID to 0]]>
</Line>
<Line Number="168">
<![CDATA[ELSE]]>
</Line>
<Line Number="169">
<![CDATA[	RequestID_Invalid := 0;]]>
</Line>
<Line Number="170">
<![CDATA[	Packet[CurrentByte+2] := RequestID;	//Set RequestID to specified value]]>
</Line>
<Line Number="171">
<![CDATA[END_IF;]]>
</Line>
<Line Number="172">
<![CDATA[CurrentByte := CurrentByte + 3;	// Increment the current byte past the block]]>
</Line>
<Line Number="173">
<![CDATA[]]>
</Line>
<Line Number="174">
<![CDATA[/* Create PDU Error Block]]>
</Line>
<Line Number="175">
<![CDATA[Format is:]]>
</Line>
<Line Number="176">
<![CDATA[ [0] Error Type]]>
</Line>
<Line Number="177">
<![CDATA[ [1] Error Length]]>
</Line>
<Line Number="178">
<![CDATA[ [2] Error Value]]>
</Line>
<Line Number="179">
<![CDATA[*/]]>
</Line>
<Line Number="180">
<![CDATA[Packet[CurrentByte] := 16#02;	// Error - Type = Integer]]>
</Line>
<Line Number="181">
<![CDATA[Packet[CurrentByte+1] := 16#01;	// Error - Length = 1]]>
</Line>
<Line Number="182">
<![CDATA[Packet[CurrentByte+2] := 16#00;	// Error - Value[0] = 0		- Set to 0 for sent packet, request may return error.  Possible values are 0 (noError), 1 (tooBig), 2 (noSuchName), 3 (badValue), 4 (readOnly), 5 (genErr).]]>
</Line>
<Line Number="183">
<![CDATA[CurrentByte := CurrentByte + 3;	// Increment the current byte past the block]]>
</Line>
<Line Number="184">
<![CDATA[]]>
</Line>
<Line Number="185">
<![CDATA[/* Create PDU Error Index Block]]>
</Line>
<Line Number="186">
<![CDATA[Format is:]]>
</Line>
<Line Number="187">
<![CDATA[ [0] Error Index Type]]>
</Line>
<Line Number="188">
<![CDATA[ [1] Error Index Length]]>
</Line>
<Line Number="189">
<![CDATA[ [2] Error Index Value]]>
</Line>
<Line Number="190">
<![CDATA[*/]]>
</Line>
<Line Number="191">
<![CDATA[Packet[CurrentByte] := 16#02;	// Error Index - Type = Integer]]>
</Line>
<Line Number="192">
<![CDATA[Packet[CurrentByte+1] := 16#01;	// Error Index - Length = 1]]>
</Line>
<Line Number="193">
<![CDATA[Packet[CurrentByte+2] := 16#00;	// Error Index - Value[0] = 0	- Set to 0 for sent packet]]>
</Line>
<Line Number="194">
<![CDATA[CurrentByte := CurrentByte + 3;	// Increment the current byte past the block]]>
</Line>
<Line Number="195">
<![CDATA[]]>
</Line>
<Line Number="196">
<![CDATA[/* Create the VarBind List]]>
</Line>
<Line Number="197">
<![CDATA[Format is:]]>
</Line>
<Line Number="198">
<![CDATA[ [0] Varbind List Type]]>
</Line>
<Line Number="199">
<![CDATA[ [1] Varbind List Length]]>
</Line>
<Line Number="200">
<![CDATA[ [2-n] Varbind Type]]>
</Line>
<Line Number="201">
<![CDATA[*/]]>
</Line>
<Line Number="202">
<![CDATA[Packet[CurrentByte] := 16#30;					// VarBind List - Type = Sequence]]>
</Line>
<Line Number="203">
<![CDATA[VarBindList_Length_Index := CurrentByte + 1;	// Save the VarBind List Length byte location for later, when we can calculate (=VarBind Length + 2)]]>
</Line>
<Line Number="204">
<![CDATA[CurrentByte := CurrentByte + 2;					// Increment the current byte past the block]]>
</Line>
<Line Number="205">
<![CDATA[]]>
</Line>
<Line Number="206">
<![CDATA[/* Create the VarBind Type]]>
</Line>
<Line Number="207">
<![CDATA[Format is:]]>
</Line>
<Line Number="208">
<![CDATA[ [0] Varbind Type]]>
</Line>
<Line Number="209">
<![CDATA[ [1] Varbind Length]]>
</Line>
<Line Number="210">
<![CDATA[ [2-n] Object Identifier (OID)]]>
</Line>
<Line Number="211">
<![CDATA[ [n+1-m] Value]]>
</Line>
<Line Number="212">
<![CDATA[*/]]>
</Line>
<Line Number="213">
<![CDATA[Packet[CurrentByte] := 16#30;	//VarBind - Type = Sequence]]>
</Line>
<Line Number="214">
<![CDATA[VarBind_Length_Index := CurrentByte + 1;			//Save the VarBind Length byte location for later, when we can calculate (= OID Length + Value Length)]]>
</Line>
<Line Number="215">
<![CDATA[CurrentByte := CurrentByte + 2;					// Increment the current byte past the block]]>
</Line>
<Line Number="216">
<![CDATA[]]>
</Line>
<Line Number="217">
<![CDATA[/* Create The OID block]]>
</Line>
<Line Number="218">
<![CDATA[Format is:]]>
</Line>
<Line Number="219">
<![CDATA[ [0] OID Type]]>
</Line>
<Line Number="220">
<![CDATA[ [1] OID Length]]>
</Line>
<Line Number="221">
<![CDATA[ [2-n] OID Value]]>
</Line>
<Line Number="222">
<![CDATA[*/]]>
</Line>
<Line Number="223">
<![CDATA[/* Note: OID integers are encoded in 7-bit, with bit 8 encoded as 'More' signal.]]>
</Line>
<Line Number="224">
<![CDATA[Practically, this means if the value in the OID is over 127, encode the first 7 bits, then move the next 7 bits to the next byte.]]>
</Line>
<Line Number="225">
<![CDATA[This program has a limitation of a 2-byte value, to keep things simple, so the max value of any number in the OID is 32767.]]>
</Line>
<Line Number="226">
<![CDATA[*/]]>
</Line>
<Line Number="227">
<![CDATA[Packet[CurrentByte] := 16#06;	// Packet type = OID]]>
</Line>
<Line Number="228">
<![CDATA[OID_Length_Index := CurrentByte + 1;	// Save the OID length]]>
</Line>
<Line Number="229">
<![CDATA[CurrentByte := CurrentByte + 2;			// Increment the current byte to the start of the OID data]]>
</Line>
<Line Number="230">
<![CDATA[]]>
</Line>
<Line Number="231">
<![CDATA[OID_Invalid_Flag := 0;	//Reset the OID Invalid Flag]]>
</Line>
<Line Number="232">
<![CDATA[J := 0;							// Clear temporary holding iterator]]>
</Line>
<Line Number="233">
<![CDATA[FOR I := 0 TO 63 BY 1 DO		// Clear the temporary array by writing 0 to all elements]]>
</Line>
<Line Number="234">
<![CDATA[	TEMP_ARRAY_1[I] := 0;]]>
</Line>
<Line Number="235">
<![CDATA[	TEMP_ARRAY_2[I] := 0;]]>
</Line>
<Line Number="236">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="237">
<![CDATA[]]>
</Line>
<Line Number="238">
<![CDATA[FOR I := 0 TO OID.LEN-1 BY 1 DO	// Step 2 - Iterate on each character in the string]]>
</Line>
<Line Number="239">
<![CDATA[	IF OID.DATA[I] = 46 THEN		// If the OID address character =  '.' (char 46)]]>
</Line>
<Line Number="240">
<![CDATA[		TEMP_ARRAY_1[J] := I;					// Log its location into the Temp Array, as it is an octet separator]]>
</Line>
<Line Number="241">
<![CDATA[		J := J + 1;]]>
</Line>
<Line Number="242">
<![CDATA[	ELSIF OID.DATA[I] < 48 OR OID.DATA[I] > 57 THEN		// If we detect a character that is not 0-9]]>
</Line>
<Line Number="243">
<![CDATA[		OID_Invalid_Flag := 1;		// Flag the OID as invalid]]>
</Line>
<Line Number="244">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="245">
<![CDATA[END_FOR;]]>
</Line>
<Line Number="246">
<![CDATA[IF J < 3 THEN 					// If we do not have enough fields in the OID, (at least 1.3.6.1)]]>
</Line>
<Line Number="247">
<![CDATA[	OID_Invalid_Flag := 1;		// Flag the OID string as invalid]]>
</Line>
<Line Number="248">
<![CDATA[ELSIF NOT OID_Invalid_Flag THEN	// If the OID string is so far valid]]>
</Line>
<Line Number="249">
<![CDATA[	FOR I := 0 TO J BY 1 DO		//Parse through detected OID integers.]]>
</Line>
<Line Number="250">
<![CDATA[		//Parse Octet #1]]>
</Line>
<Line Number="251">
<![CDATA[		IF I = 0 THEN]]>
</Line>
<Line Number="252">
<![CDATA[			MID(OID,TEMP_ARRAY_1[0],1,TEMP_STRING);		// Parse the first octet out of the string	(from position 0 to first decimal)]]>
</Line>
<Line Number="253">
<![CDATA[			STOD(TEMP_STRING,TEMP_DINT);				// Convert the octet to a DINT]]>
</Line>
<Line Number="254">
<![CDATA[			IF TEMP_DINT <> 1 THEN ]]>
</Line>
<Line Number="255">
<![CDATA[				OID_Invalid_Flag := 1; 	//If the OID doesn't start with 1, it's invalid]]>
</Line>
<Line Number="256">
<![CDATA[			END_IF;]]>
</Line>
<Line Number="257">
<![CDATA[]]>
</Line>
<Line Number="258">
<![CDATA[		ELSE]]>
</Line>
<Line Number="259">
<![CDATA[			IF I = J THEN]]>
</Line>
<Line Number="260">
<![CDATA[				// Parse last Octet (n)]]>
</Line>
<Line Number="261">
<![CDATA[				TEMP_INT_1 := OID.LEN-TEMP_ARRAY_1[I-1]-1;			// Parse length = Last Character - 1st decimal position - 1 (for offset difference)]]>
</Line>
<Line Number="262">
<![CDATA[				TEMP_INT_2 := TEMP_ARRAY_1[I-1]+2;					// Parse Start = 1st decimal position + 2 (1 to offset, 1 for position after decimal)]]>
</Line>
<Line Number="263">
<![CDATA[				MID(OID,TEMP_INT_1,TEMP_INT_2,TEMP_STRING);		// Parse the second octet out of the string]]>
</Line>
<Line Number="264">
<![CDATA[				STOD(TEMP_STRING,TEMP_DINT);					// Convert the octet to a DINT]]>
</Line>
<Line Number="265">
<![CDATA[			ELSE]]>
</Line>
<Line Number="266">
<![CDATA[				//Parse Octet 1 to n-1]]>
</Line>
<Line Number="267">
<![CDATA[				TEMP_INT_1 := TEMP_ARRAY_1[I]-TEMP_ARRAY_1[I-1]-1;			// Parse length = 2nd decimal position - 1st decimal position - 1 (for offset difference)]]>
</Line>
<Line Number="268">
<![CDATA[				TEMP_INT_2 := TEMP_ARRAY_1[I-1]+2;							// Parse Start = 1st decimal position + 2 (1 to offset, 1 for position after decimal)]]>
</Line>
<Line Number="269">
<![CDATA[				MID(OID,TEMP_INT_1,TEMP_INT_2,TEMP_STRING);		// Parse the second octet out of the string]]>
</Line>
<Line Number="270">
<![CDATA[				STOD(TEMP_STRING,TEMP_DINT);					// Convert the octet to a DINT]]>
</Line>
<Line Number="271">
<![CDATA[			END_IF;]]>
</Line>
<Line Number="272">
<![CDATA[			// Check first two numbers]]>
</Line>
<Line Number="273">
<![CDATA[			IF I = 1 AND TEMP_DINT <> 3 THEN			// If the second OID value is not 3, the OID is invalid]]>
</Line>
<Line Number="274">
<![CDATA[				OID_Invalid_Flag := 1;]]>
</Line>
<Line Number="275">
<![CDATA[				CurrentByte := CurrentByte + 1;				// Just increment the current byte by 1						]]>
</Line>
<Line Number="276">
<![CDATA[			ELSIF I = 1 AND TEMP_DINT = 3 THEN			// If first pair is usual 1.3. (iso.)]]>
</Line>
<Line Number="277">
<![CDATA[				Packet[CurrentByte] := 16#2b;				// Add first byte with special encoding]]>
</Line>
<Line Number="278">
<![CDATA[				CurrentByte := CurrentByte + 1;				// Increment the Current Byte]]>
</Line>
<Line Number="279">
<![CDATA[			ELSIF TEMP_DINT > 127 AND TEMP_DINT < 16384 THEN	// If the value is 2 bytes, then]]>
</Line>
<Line Number="280">
<![CDATA[				Packet[CurrentByte+1].0 := TEMP_DINT.0;		// For the first 7 bits, copy to the 2nd byte]]>
</Line>
<Line Number="281">
<![CDATA[				Packet[CurrentByte+1].1 := TEMP_DINT.1;]]>
</Line>
<Line Number="282">
<![CDATA[				Packet[CurrentByte+1].2 := TEMP_DINT.2;]]>
</Line>
<Line Number="283">
<![CDATA[				Packet[CurrentByte+1].3 := TEMP_DINT.3;]]>
</Line>
<Line Number="284">
<![CDATA[				Packet[CurrentByte+1].4 := TEMP_DINT.4;]]>
</Line>
<Line Number="285">
<![CDATA[				Packet[CurrentByte+1].5 := TEMP_DINT.5;]]>
</Line>
<Line Number="286">
<![CDATA[				Packet[CurrentByte+1].6 := TEMP_DINT.6;]]>
</Line>
<Line Number="287">
<![CDATA[				Packet[CurrentByte+1].7 := 0;				// Overwrite the More bit in case it contained data.]]>
</Line>
<Line Number="288">
<![CDATA[				Packet[CurrentByte].0 := TEMP_DINT.7;		// For the remaining 7 bits, copy to the first byte]]>
</Line>
<Line Number="289">
<![CDATA[				Packet[CurrentByte].1 := TEMP_DINT.8;]]>
</Line>
<Line Number="290">
<![CDATA[				Packet[CurrentByte].2 := TEMP_DINT.9;]]>
</Line>
<Line Number="291">
<![CDATA[				Packet[CurrentByte].3 := TEMP_DINT.10;]]>
</Line>
<Line Number="292">
<![CDATA[				Packet[CurrentByte].4 := TEMP_DINT.11;]]>
</Line>
<Line Number="293">
<![CDATA[				Packet[CurrentByte].5 := TEMP_DINT.12;]]>
</Line>
<Line Number="294">
<![CDATA[				Packet[CurrentByte].6 := TEMP_DINT.13;]]>
</Line>
<Line Number="295">
<![CDATA[				Packet[CurrentByte].7 := 1;				// Overwrite the last bit - set the Next bit]]>
</Line>
<Line Number="296">
<![CDATA[				CurrentByte := CurrentByte + 2;			// Increment the current byte by 2]]>
</Line>
<Line Number="297">
<![CDATA[			ELSIF TEMP_DINT >= 16384 AND TEMP_DINT < 2097152 THEN	// If the value is 3-bytes, then]]>
</Line>
<Line Number="298">
<![CDATA[				Packet[CurrentByte+2].0 := TEMP_DINT.0;		// For the first 7 bits, copy to the 3rd byte]]>
</Line>
<Line Number="299">
<![CDATA[				Packet[CurrentByte+2].1 := TEMP_DINT.1;]]>
</Line>
<Line Number="300">
<![CDATA[				Packet[CurrentByte+2].2 := TEMP_DINT.2;]]>
</Line>
<Line Number="301">
<![CDATA[				Packet[CurrentByte+2].3 := TEMP_DINT.3;]]>
</Line>
<Line Number="302">
<![CDATA[				Packet[CurrentByte+2].4 := TEMP_DINT.4;]]>
</Line>
<Line Number="303">
<![CDATA[				Packet[CurrentByte+2].5 := TEMP_DINT.5;]]>
</Line>
<Line Number="304">
<![CDATA[				Packet[CurrentByte+2].6 := TEMP_DINT.6;]]>
</Line>
<Line Number="305">
<![CDATA[				Packet[CurrentByte+2].7 := 0;				// Overwrite the More bit in case it contained data]]>
</Line>
<Line Number="306">
<![CDATA[				Packet[CurrentByte+1].0 := TEMP_DINT.7;		// For the second 7 bits, copy to the 2nd byte]]>
</Line>
<Line Number="307">
<![CDATA[				Packet[CurrentByte+1].1 := TEMP_DINT.8;	]]>
</Line>
<Line Number="308">
<![CDATA[				Packet[CurrentByte+1].2 := TEMP_DINT.9;]]>
</Line>
<Line Number="309">
<![CDATA[				Packet[CurrentByte+1].3 := TEMP_DINT.10;]]>
</Line>
<Line Number="310">
<![CDATA[				Packet[CurrentByte+1].4 := TEMP_DINT.11;]]>
</Line>
<Line Number="311">
<![CDATA[				Packet[CurrentByte+1].5 := TEMP_DINT.12;]]>
</Line>
<Line Number="312">
<![CDATA[				Packet[CurrentByte+1].6 := TEMP_DINT.13;]]>
</Line>
<Line Number="313">
<![CDATA[				Packet[CurrentByte+1].7 := 1;				// Overwrite the More bit in case it contained data]]>
</Line>
<Line Number="314">
<![CDATA[				Packet[CurrentByte].0 := TEMP_DINT.14;		// For the third 7 bits, copy to the first byte]]>
</Line>
<Line Number="315">
<![CDATA[				Packet[CurrentByte].1 := TEMP_DINT.15;]]>
</Line>
<Line Number="316">
<![CDATA[				Packet[CurrentByte].2 := TEMP_DINT.16;]]>
</Line>
<Line Number="317">
<![CDATA[				Packet[CurrentByte].3 := TEMP_DINT.17;]]>
</Line>
<Line Number="318">
<![CDATA[				Packet[CurrentByte].4 := TEMP_DINT.18;]]>
</Line>
<Line Number="319">
<![CDATA[				Packet[CurrentByte].5 := TEMP_DINT.19;]]>
</Line>
<Line Number="320">
<![CDATA[				Packet[CurrentByte].6 := TEMP_DINT.20;]]>
</Line>
<Line Number="321">
<![CDATA[				Packet[CurrentByte].7 := 1;				// Overwrite the last bit - set the Next bit]]>
</Line>
<Line Number="322">
<![CDATA[				CurrentByte := CurrentByte + 3;			// Increment the current byte by 3]]>
</Line>
<Line Number="323">
<![CDATA[			ELSIF TEMP_DINT >= 2097152 AND TEMP_DINT < 268435456 THEN	// IF the value is 4-bytes, then]]>
</Line>
<Line Number="324">
<![CDATA[				Packet[CurrentByte+3].0 := TEMP_DINT.0;		// For the first 7 bits, copy to the 4th byte]]>
</Line>
<Line Number="325">
<![CDATA[				Packet[CurrentByte+3].1 := TEMP_DINT.1;]]>
</Line>
<Line Number="326">
<![CDATA[				Packet[CurrentByte+3].2 := TEMP_DINT.2;]]>
</Line>
<Line Number="327">
<![CDATA[				Packet[CurrentByte+3].3 := TEMP_DINT.3;]]>
</Line>
<Line Number="328">
<![CDATA[				Packet[CurrentByte+3].4 := TEMP_DINT.4;]]>
</Line>
<Line Number="329">
<![CDATA[				Packet[CurrentByte+3].5 := TEMP_DINT.5;]]>
</Line>
<Line Number="330">
<![CDATA[				Packet[CurrentByte+3].6 := TEMP_DINT.6;]]>
</Line>
<Line Number="331">
<![CDATA[				Packet[CurrentByte+3].7 := 0;				// Overwrite the More bit in case it contained data]]>
</Line>
<Line Number="332">
<![CDATA[				Packet[CurrentByte+2].0 := TEMP_DINT.7;		// For the second 7 bits, copy to the 3rd byte]]>
</Line>
<Line Number="333">
<![CDATA[				Packet[CurrentByte+2].1 := TEMP_DINT.8;]]>
</Line>
<Line Number="334">
<![CDATA[				Packet[CurrentByte+2].2 := TEMP_DINT.9;]]>
</Line>
<Line Number="335">
<![CDATA[				Packet[CurrentByte+2].3 := TEMP_DINT.10;]]>
</Line>
<Line Number="336">
<![CDATA[				Packet[CurrentByte+2].4 := TEMP_DINT.11;]]>
</Line>
<Line Number="337">
<![CDATA[				Packet[CurrentByte+2].5 := TEMP_DINT.12;]]>
</Line>
<Line Number="338">
<![CDATA[				Packet[CurrentByte+2].6 := TEMP_DINT.13;]]>
</Line>
<Line Number="339">
<![CDATA[				Packet[CurrentByte+2].7 := 1;				// Overwrite the More bit - set the Next bit]]>
</Line>
<Line Number="340">
<![CDATA[				Packet[CurrentByte+1].0 := TEMP_DINT.14;	// For the third 7 bits, copy to the 2nd byte]]>
</Line>
<Line Number="341">
<![CDATA[				Packet[CurrentByte+1].1 := TEMP_DINT.15;	]]>
</Line>
<Line Number="342">
<![CDATA[				Packet[CurrentByte+1].2 := TEMP_DINT.16;]]>
</Line>
<Line Number="343">
<![CDATA[				Packet[CurrentByte+1].3 := TEMP_DINT.17;]]>
</Line>
<Line Number="344">
<![CDATA[				Packet[CurrentByte+1].4 := TEMP_DINT.18;]]>
</Line>
<Line Number="345">
<![CDATA[				Packet[CurrentByte+1].5 := TEMP_DINT.19;]]>
</Line>
<Line Number="346">
<![CDATA[				Packet[CurrentByte+1].6 := TEMP_DINT.20;]]>
</Line>
<Line Number="347">
<![CDATA[				Packet[CurrentByte+1].7 := 1;				// Overwrite the More bit - set the Next bit]]>
</Line>
<Line Number="348">
<![CDATA[				Packet[CurrentByte].0 := TEMP_DINT.21;		// For the fourth 7 bits, copy to the first byte]]>
</Line>
<Line Number="349">
<![CDATA[				Packet[CurrentByte].1 := TEMP_DINT.22;]]>
</Line>
<Line Number="350">
<![CDATA[				Packet[CurrentByte].2 := TEMP_DINT.23;]]>
</Line>
<Line Number="351">
<![CDATA[				Packet[CurrentByte].3 := TEMP_DINT.24;]]>
</Line>
<Line Number="352">
<![CDATA[				Packet[CurrentByte].4 := TEMP_DINT.25;]]>
</Line>
<Line Number="353">
<![CDATA[				Packet[CurrentByte].5 := TEMP_DINT.26;]]>
</Line>
<Line Number="354">
<![CDATA[				Packet[CurrentByte].6 := TEMP_DINT.27;]]>
</Line>
<Line Number="355">
<![CDATA[				Packet[CurrentByte].7 := 1;				// Overwrite the last bit - set the Next bit]]>
</Line>
<Line Number="356">
<![CDATA[				CurrentByte := CurrentByte + 4;			// Increment the current byte by 3]]>
</Line>
<Line Number="357">
<![CDATA[			ELSIF TEMP_DINT >= 268435456 OR TEMP_DINT < 0 THEN			// If the OID is longer than 4 bytes, this is unsupported, so throw an error]]>
</Line>
<Line Number="358">
<![CDATA[				OID_Invalid_Flag := 1;]]>
</Line>
<Line Number="359">
<![CDATA[				CurrentByte := CurrentByte + 4;]]>
</Line>
<Line Number="360">
<![CDATA[			ELSE										// If it's not special, ]]>
</Line>
<Line Number="361">
<![CDATA[				COP(TEMP_DINT,Packet[CurrentByte],1);					// Copy the value into the current byte]]>
</Line>
<Line Number="362">
<![CDATA[				CurrentByte := CurrentByte + 1;				// Increment the Current Byte]]>
</Line>
<Line Number="363">
<![CDATA[			END_IF;]]>
</Line>
<Line Number="364">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="365">
<![CDATA[	END_FOR;]]>
</Line>
<Line Number="366">
<![CDATA[	Packet[OID_Length_Index] := CurrentByte - OID_Length_Index - 1;	//Set the OID Length now that we have it.]]>
</Line>
<Line Number="367">
<![CDATA[	Packet[VarBind_Length_Index] := Packet[OID_Length_Index] + 4;			// Set the Varbind length (2 for header, + 2 for response)]]>
</Line>
<Line Number="368">
<![CDATA[	Packet[VarBindList_Length_Index] := Packet[VarBind_Length_Index] + 2;	// Set the VarBind_List Length]]>
</Line>
<Line Number="369">
<![CDATA[	Packet[PDU_Length_Index] := Packet[VarBindList_Length_Index] + 11;		// set the PDU Length (= RequestID_length + 2 + Error_Length + 2 + ErrorIndex_Length + 2 + VarBindList_Length + 2.  RequestID+Error+ErrorIndex + VarBindList Header = 11)]]>
</Line>
<Line Number="370">
<![CDATA[]]>
</Line>
<Line Number="371">
<![CDATA[	]]>
</Line>
<Line Number="372">
<![CDATA[	]]>
</Line>
<Line Number="373">
<![CDATA[]]>
</Line>
<Line Number="374">
<![CDATA[END_IF;]]>
</Line>
<Line Number="375">
<![CDATA[]]>
</Line>
<Line Number="376">
<![CDATA[/* Create the Value block]]>
</Line>
<Line Number="377">
<![CDATA[Format is:]]>
</Line>
<Line Number="378">
<![CDATA[ [0] Type]]>
</Line>
<Line Number="379">
<![CDATA[ [1] Length]]>
</Line>
<Line Number="380">
<![CDATA[ [2-n] Value (if Type is not Null)]]>
</Line>
<Line Number="381">
<![CDATA[*/]]>
</Line>
<Line Number="382">
<![CDATA[Packet[CurrentByte] := 16#05;	//42 - Value - Type = Null]]>
</Line>
<Line Number="383">
<![CDATA[Packet[CurrentByte+1] := 16#00;	//43 - Value - Length = 0]]>
</Line>
<Line Number="384">
<![CDATA[//There is no value for the Get or GetNext request.  The Value will be added in the response.]]>
</Line>
<Line Number="385">
<![CDATA[CurrentByte := CurrentByte + 2;	// Increment the current byte past the block]]>
</Line>
<Line Number="386">
<![CDATA[]]>
</Line>
<Line Number="387">
<![CDATA[Packet[1] := CurrentByte - 2;	//1 SNMP Packet Length = bytes (= version_length + 2 + community_length + 2 + getrequest_length + 2)]]>
</Line>
<Line Number="388">
<![CDATA[BufLen := CurrentByte ;	// Output the whole packet length (a.k.a. packet length in field [1] + 2 for header)]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="SLO_SNMP_Packet_Parse" Revision="1.0" Vendor="J. Dornish" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2019-08-21T16:57:57.087Z" CreatedBy="Not Available" EditedDate="2022-01-07T16:08:15.145Z" EditedBy="Not Available" SoftwareRevision="v32.04"
>
<Description>
<![CDATA[Parses an SNMP v1 Get-Response packet.

For use with SLO_SNMP_Packet_Build, and the SLO_SNMP datatypes.
Responses Supported:
- DINT types Int32 (02h) and Counter (42h)
- String types Octet String (04h)]]>
</Description>
<RevisionNote>
<![CDATA[v1.0 - by JDornish.
Builds an SNMP packet from parameters.
Currently supports SNMP v1, and Get-Next packets]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[2019 by Jason Dornish

Note: 

This block may not handle all standards complaint SNMP traffic.  Please test prior to putting into production.
Max OID segment value is 268435456 (4 Byte 7-bit number), due to DINT limitations.  Hopefully this will not be an issue.

This block is released under the MIT license.]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Packet" TagType="Base" DataType="SINT" Dimensions="484" Usage="InOut" Radix="Hex" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[SNMP Packet to build (Socket_WriteParams.Buf)]]>
</Description>
</Parameter>
<Parameter Name="Community" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[SNMP String (ex: public)]]>
</Description>
</Parameter>
<Parameter Name="OID" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[OID Returned (ex: 1.3.1.x.x.x.)]]>
</Description>
</Parameter>
<Parameter Name="SNMP_RequestID" TagType="Base" DataType="INT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Request ID]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_Is_Integer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[The SNMP Response is an Integer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_Is_String" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[The SNMP Response is an Octet String]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_Is_Other" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[The SNMP Response is another data type]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_DINT" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[The SNMP Response Output if it is a DINT]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_String" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[The SNMP Response Output if it is a String]]>
</Description>
</Parameter>
<Parameter Name="Response_Invalid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Response packet is invalid]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Response_Invalid_Location" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Response Invalid Error Location (0 = None)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Output_Type" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[The SNMP Response Data Type]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SNMP_Output_Length" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SNMP_Version" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Version (0 = V1)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SNMP_Response_Error_Value" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Response Error Value:
0 (noError),
1 (tooBig),
2 (noSuchName),
3 (badValue),
4 (readOnly),
5 (genErr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SNMP_Version_Invalid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Version is Invalid (Not V1)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Response_Invalid_Section" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Request_Response_Mismatch" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Mismatch between SNMP Request and Response]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SNMP_Response_RequestID" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[SNMP Response Request ID]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="I" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Iterator #1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CurrentByte" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Currently Used Byte]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_Message_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Packet Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_Community_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Community String Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_PDU_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[PDU Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_Error_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Error Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_Error_Index_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Error Index Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_VarBind_List_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[VarBind List Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_VarBind_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[VarBind Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_Value_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Value Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_OID_Length" DataType="INT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[SNMP OID Length]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_DINT" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Temporary Holding Integer for Internal Use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_STRING" DataType="STRING" ExternalAccess="None">
<Description>
<![CDATA[Temporary Holding String fo Internal use]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Response_Invalid_Flag" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Flag that the Response is corrupted or invalid]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="SNMP_OID_Invalid_Flag" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[SNMP OID Invalid Flag]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="String_Period" DataType="STRING" ExternalAccess="None">
<Description>
<![CDATA[Period String]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[1,'.$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="1">
<![CDATA['.']]>
</DefaultData>
</LocalTag>
<LocalTag Name="String_1_3" DataType="STRING" ExternalAccess="None">
<Description>
<![CDATA[1.3 String]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[3,'1.3$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="3">
<![CDATA['1.3']]>
</DefaultData>
</LocalTag>
<LocalTag Name="TEMP_SINT_ARRAY" DataType="SINT" Dimensions="4" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Array of SINT Values for DINT manipulation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="SINT" Dimensions="4" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
<Element Index="[3]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[/* SNMP Packet Parse]]>
</Line>
<Line Number="1">
<![CDATA[Provided under MIT license]]>
</Line>
<Line Number="2">
<![CDATA[Copyright 2019 by Jason Dornish]]>
</Line>
<Line Number="3">
<![CDATA[Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:]]>
</Line>
<Line Number="4">
<![CDATA[The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.]]>
</Line>
<Line Number="5">
<![CDATA[THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.]]>
</Line>
<Line Number="6">
<![CDATA[]]>
</Line>
<Line Number="7">
<![CDATA[Builds an SNMP GetRequest packet for an Allen Bradley Logix processor supporting sockets.  Tested on CompactLogix(TM) L24 processor series.]]>
</Line>
<Line Number="8">
<![CDATA[]]>
</Line>
<Line Number="9">
<![CDATA[v.1.00 - Initial Build]]>
</Line>
<Line Number="10">
<![CDATA[Note: Currently supports SNMP v1 only]]>
</Line>
<Line Number="11">
<![CDATA[]]>
</Line>
<Line Number="12">
<![CDATA[*/]]>
</Line>
<Line Number="13">
<![CDATA[]]>
</Line>
<Line Number="14">
<![CDATA[Response_Invalid_Flag := 0;	// Reset the Response Invalid Flag]]>
</Line>
<Line Number="15">
<![CDATA[Response_Invalid_Location := 0;	]]>
</Line>
<Line Number="16">
<![CDATA[Response_Invalid_Section := 0;]]>
</Line>
<Line Number="17">
<![CDATA[]]>
</Line>
<Line Number="18">
<![CDATA[/* Section #1 - Parse SNMP Packet Header]]>
</Line>
<Line Number="19">
<![CDATA[Format is:]]>
</Line>
<Line Number="20">
<![CDATA[ [0] Packet Type]]>
</Line>
<Line Number="21">
<![CDATA[ [1] Packet Length]]>
</Line>
<Line Number="22">
<![CDATA[ [2-4] SNMP Version]]>
</Line>
<Line Number="23">
<![CDATA[ [5-n] SNMP Community Block]]>
</Line>
<Line Number="24">
<![CDATA[ [n+1-m] SNMP PDU Block]]>
</Line>
<Line Number="25">
<![CDATA[*/]]>
</Line>
<Line Number="26">
<![CDATA[IF Packet[0] <> 16#30 THEN	//0 - Check Type = Sequence]]>
</Line>
<Line Number="27">
<![CDATA[	Response_Invalid_Flag := 1;			// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="28">
<![CDATA[	Response_Invalid_Location := 0;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="29">
<![CDATA[	Response_Invalid_Section := 100;	// Note the Section of invalid data ]]>
</Line>
<Line Number="30">
<![CDATA[ELSE]]>
</Line>
<Line Number="31">
<![CDATA[	SNMP_Message_Length := Packet[1];	// 1 - If so far valid, record the packet length]]>
</Line>
<Line Number="32">
<![CDATA[END_IF;	]]>
</Line>
<Line Number="33">
<![CDATA[]]>
</Line>
<Line Number="34">
<![CDATA[/* Section #2 - Parse SNMP Version Block]]>
</Line>
<Line Number="35">
<![CDATA[Format is:]]>
</Line>
<Line Number="36">
<![CDATA[ [0] Version Type]]>
</Line>
<Line Number="37">
<![CDATA[ [1] Version Length]]>
</Line>
<Line Number="38">
<![CDATA[ [2] Version Value]]>
</Line>
<Line Number="39">
<![CDATA[*/]]>
</Line>
<Line Number="40">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="41">
<![CDATA[	IF Packet[2] <> 16#02 THEN		// If the SNMP Version type is not an integer, we cannot process]]>
</Line>
<Line Number="42">
<![CDATA[		Response_Invalid_Flag := 1;			// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="43">
<![CDATA[		Response_Invalid_Location := 2;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="44">
<![CDATA[		Response_Invalid_Section := 201;	// Note the Section of invalid data ]]>
</Line>
<Line Number="45">
<![CDATA[	ELSIF Packet[3] <> 1 THEN		// If the SNMP Version length != 1, we cannot process]]>
</Line>
<Line Number="46">
<![CDATA[		Response_Invalid_Flag := 1;			// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="47">
<![CDATA[		Response_Invalid_Location := 3;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="48">
<![CDATA[		Response_Invalid_Section := 202;	// Note the Section of invalid data]]>
</Line>
<Line Number="49">
<![CDATA[	ELSIF Packet[4] <> 16#00 THEN	// If the SNMP Version != 0 (V1), we cannot process]]>
</Line>
<Line Number="50">
<![CDATA[		SNMP_Version := Packet[4];]]>
</Line>
<Line Number="51">
<![CDATA[		SNMP_Version_Invalid := 1;]]>
</Line>
<Line Number="52">
<![CDATA[		Response_Invalid_Location := 4;		// Record the position of the Invalid Respons]]>
</Line>
<Line Number="53">
<![CDATA[		Response_Invalid_Flag := 1;			// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="54">
<![CDATA[		Response_Invalid_Section := 203;	// Note the Section of invalid data]]>
</Line>
<Line Number="55">
<![CDATA[	ELSE							// If the SNMP version and all else are correct, record the version, and reset the version_invalid output]]>
</Line>
<Line Number="56">
<![CDATA[		SNMP_Version := Packet[4];]]>
</Line>
<Line Number="57">
<![CDATA[		SNMP_Version_Invalid := 0;			]]>
</Line>
<Line Number="58">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="59">
<![CDATA[END_IF;]]>
</Line>
<Line Number="60">
<![CDATA[]]>
</Line>
<Line Number="61">
<![CDATA[/* Section 3 - Parse SNMP Community Block]]>
</Line>
<Line Number="62">
<![CDATA[Format is:]]>
</Line>
<Line Number="63">
<![CDATA[ [0] Community String Type]]>
</Line>
<Line Number="64">
<![CDATA[ [1] Community String Length]]>
</Line>
<Line Number="65">
<![CDATA[ [2-n] Community String Value]]>
</Line>
<Line Number="66">
<![CDATA[*/]]>
</Line>
<Line Number="67">
<![CDATA[IF NOT Response_Invalid_Flag THEN	// If the packet is so far valid...]]>
</Line>
<Line Number="68">
<![CDATA[	IF Packet[5] <> 16#04 THEN											// If this is the first byte after the Version then.. check Community Type = Octet String = 04h]]>
</Line>
<Line Number="69">
<![CDATA[		Response_Invalid_Flag := 1;										// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="70">
<![CDATA[		Response_Invalid_Location := 5;									// Record the position of the Invalid Response]]>
</Line>
<Line Number="71">
<![CDATA[		Response_Invalid_Section := 300;								// Note the Section of invalid data]]>
</Line>
<Line Number="72">
<![CDATA[	ELSE																// If so far good, ]]>
</Line>
<Line Number="73">
<![CDATA[		SNMP_Community_Length := Packet[6];								// Record the community Length]]>
</Line>
<Line Number="74">
<![CDATA[	END_IF;	]]>
</Line>
<Line Number="75">
<![CDATA[	IF NOT Response_Invalid_Flag AND SNMP_Community_Length > 0 THEN		// If all is OK,]]>
</Line>
<Line Number="76">
<![CDATA[		Community.LEN := SNMP_Community_Length;]]>
</Line>
<Line Number="77">
<![CDATA[		COP(Packet[7],Community.DATA[0],SNMP_Community_Length);			// Copy the current byte in the string to the packet]]>
</Line>
<Line Number="78">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="79">
<![CDATA[END_IF;]]>
</Line>
<Line Number="80">
<![CDATA[]]>
</Line>
<Line Number="81">
<![CDATA[]]>
</Line>
<Line Number="82">
<![CDATA[/* Section 4 - Parse SNMP PDU]]>
</Line>
<Line Number="83">
<![CDATA[Format is:]]>
</Line>
<Line Number="84">
<![CDATA[ [0] PDU Type]]>
</Line>
<Line Number="85">
<![CDATA[ [1] PDU Length]]>
</Line>
<Line Number="86">
<![CDATA[ [2-n] RequestID Block]]>
</Line>
<Line Number="87">
<![CDATA[ [n+1-m] Error Block]]>
</Line>
<Line Number="88">
<![CDATA[ [m+1-o] Error Index Block]]>
</Line>
<Line Number="89">
<![CDATA[ [o+1-p] VarBind List]]>
</Line>
<Line Number="90">
<![CDATA[*/]]>
</Line>
<Line Number="91">
<![CDATA[]]>
</Line>
<Line Number="92">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="93">
<![CDATA[	CurrentByte := 2 + 2 + Packet[3] + 2 + SNMP_Community_Length;		// Set our current packet location]]>
</Line>
<Line Number="94">
<![CDATA[	IF Packet[CurrentByte] = -94 THEN				// Check Type = 16#a2 (Get-Response)]]>
</Line>
<Line Number="95">
<![CDATA[		SNMP_PDU_Length := Packet[CurrentByte + 1];		// Record the PDU length]]>
</Line>
<Line Number="96">
<![CDATA[	ELSE												// If the packet type is not recognized]]>
</Line>
<Line Number="97">
<![CDATA[		Response_Invalid_Flag := 1;						// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="98">
<![CDATA[		Response_Invalid_Location := CurrentByte;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="99">
<![CDATA[		Response_Invalid_Section := 400;				// Note the Section of invalid data]]>
</Line>
<Line Number="100">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="101">
<![CDATA[	CurrentByte := CurrentByte + 2;						// Increment the current byte position]]>
</Line>
<Line Number="102">
<![CDATA[END_IF;]]>
</Line>
<Line Number="103">
<![CDATA[]]>
</Line>
<Line Number="104">
<![CDATA[/* Section 5 - Parse PDU Request ID block:]]>
</Line>
<Line Number="105">
<![CDATA[ Format is:]]>
</Line>
<Line Number="106">
<![CDATA[ [0] RequestID Type]]>
</Line>
<Line Number="107">
<![CDATA[ [1] RequestID Length]]>
</Line>
<Line Number="108">
<![CDATA[ [2-n] RequestID Value]]>
</Line>
<Line Number="109">
<![CDATA[*/]]>
</Line>
<Line Number="110">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="111">
<![CDATA[	IF Packet[CurrentByte] <> 16#02 THEN				// If the SNMP Request ID is not an Integer THEN]]>
</Line>
<Line Number="112">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="113">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="114">
<![CDATA[		Response_Invalid_Section := 501;					// Note the Section of invalid data]]>
</Line>
<Line Number="115">
<![CDATA[	ELSIF Packet[CurrentByte + 1] <> 16#01 THEN			// If the SNMP Request ID length is not 1 THEN]]>
</Line>
<Line Number="116">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="117">
<![CDATA[		Response_Invalid_Location := CurrentByte + 1;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="118">
<![CDATA[		Response_Invalid_Section := 502;					// Note the Section of invalid data]]>
</Line>
<Line Number="119">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="120">
<![CDATA[		SNMP_Response_RequestID := Packet[CurrentByte + 2];			// Record the SNMP Request ID]]>
</Line>
<Line Number="121">
<![CDATA[		IF SNMP_RequestID <> SNMP_Response_RequestID THEN	// Check if the request ID matches the expected request ID]]>
</Line>
<Line Number="122">
<![CDATA[			Request_Response_Mismatch := 1;						//If not, flag a mismatch]]>
</Line>
<Line Number="123">
<![CDATA[		ELSE]]>
</Line>
<Line Number="124">
<![CDATA[			Request_Response_Mismatch := 0;]]>
</Line>
<Line Number="125">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="126">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="127">
<![CDATA[	CurrentByte := CurrentByte + 3;						// Increment the current byte past the block]]>
</Line>
<Line Number="128">
<![CDATA[END_IF;]]>
</Line>
<Line Number="129">
<![CDATA[]]>
</Line>
<Line Number="130">
<![CDATA[]]>
</Line>
<Line Number="131">
<![CDATA[]]>
</Line>
<Line Number="132">
<![CDATA[/* Section 6 - Parse PDU Error Block]]>
</Line>
<Line Number="133">
<![CDATA[Format is:]]>
</Line>
<Line Number="134">
<![CDATA[ [0] Error Type]]>
</Line>
<Line Number="135">
<![CDATA[ [1] Error Length]]>
</Line>
<Line Number="136">
<![CDATA[ [2] Error Value]]>
</Line>
<Line Number="137">
<![CDATA[*/]]>
</Line>
<Line Number="138">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="139">
<![CDATA[	IF Packet[CurrentByte] <> 16#02 THEN				// If the Error Type is not an Integer THEN]]>
</Line>
<Line Number="140">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="141">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="142">
<![CDATA[		Response_Invalid_Section := 601;					// Note the Section of invalid data]]>
</Line>
<Line Number="143">
<![CDATA[	ELSIF Packet[CurrentByte + 1] <> 16#01 THEN			// If the Error Length is not 1 THEN]]>
</Line>
<Line Number="144">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="145">
<![CDATA[		Response_Invalid_Location := CurrentByte + 1;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="146">
<![CDATA[		Response_Invalid_Section := 602;					// Note the Section of invalid data]]>
</Line>
<Line Number="147">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="148">
<![CDATA[		SNMP_Response_Error_Value := Packet[CurrentByte + 2];	//Record the Error Value]]>
</Line>
<Line Number="149">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="150">
<![CDATA[	CurrentByte := CurrentByte + 3;	// Increment the current byte past the block]]>
</Line>
<Line Number="151">
<![CDATA[END_IF;]]>
</Line>
<Line Number="152">
<![CDATA[]]>
</Line>
<Line Number="153">
<![CDATA[/* Section 7 - Parse PDU Error Index Block]]>
</Line>
<Line Number="154">
<![CDATA[Format is:]]>
</Line>
<Line Number="155">
<![CDATA[ [0] Error Index Type]]>
</Line>
<Line Number="156">
<![CDATA[ [1] Error Index Length]]>
</Line>
<Line Number="157">
<![CDATA[ [2] Error Index Value]]>
</Line>
<Line Number="158">
<![CDATA[*/]]>
</Line>
<Line Number="159">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="160">
<![CDATA[	IF Packet[CurrentByte] <> 16#02 THEN				// If the Error Index is not an Integer THEN]]>
</Line>
<Line Number="161">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="162">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="163">
<![CDATA[		Response_Invalid_Section := 701;		// Note the Section of invalid data]]>
</Line>
<Line Number="164">
<![CDATA[	ELSIF Packet[CurrentByte + 1] <> 16#01 THEN			// If the Error Index is not 1 THEN]]>
</Line>
<Line Number="165">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="166">
<![CDATA[		Response_Invalid_Location := CurrentByte + 1;		// Record the position of the Invalid Response]]>
</Line>
<Line Number="167">
<![CDATA[		Response_Invalid_Section := 702;					// Note the Section of invalid data]]>
</Line>
<Line Number="168">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="169">
<![CDATA[		//SNMP_Response_Error_Index_Value := Packet[CurrentByte + 2];	//Don't bother recording the Error Index Value - it will always be 1 in our implementation]]>
</Line>
<Line Number="170">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="171">
<![CDATA[	CurrentByte := CurrentByte + 3;	// Increment the current byte past the block]]>
</Line>
<Line Number="172">
<![CDATA[END_IF;]]>
</Line>
<Line Number="173">
<![CDATA[]]>
</Line>
<Line Number="174">
<![CDATA[/* Section 8 - Parse the VarBind List]]>
</Line>
<Line Number="175">
<![CDATA[Format is:]]>
</Line>
<Line Number="176">
<![CDATA[ [0] Varbind List Type]]>
</Line>
<Line Number="177">
<![CDATA[ [1] Varbind List Length]]>
</Line>
<Line Number="178">
<![CDATA[ [2-n] Varbind Type]]>
</Line>
<Line Number="179">
<![CDATA[*/]]>
</Line>
<Line Number="180">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="181">
<![CDATA[	IF Packet[CurrentByte] <> 16#30 THEN				// If the VarBind List Type is not a Sequence THEN]]>
</Line>
<Line Number="182">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="183">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="184">
<![CDATA[		Response_Invalid_Section := 801;				// Note the Section of invalid data]]>
</Line>
<Line Number="185">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="186">
<![CDATA[		SNMP_VarBind_List_Length := Packet[CurrentByte + 1];	// Record the VarBind List Length]]>
</Line>
<Line Number="187">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="188">
<![CDATA[	CurrentByte := CurrentByte + 2;						// Increment the current byte past the block]]>
</Line>
<Line Number="189">
<![CDATA[END_IF;]]>
</Line>
<Line Number="190">
<![CDATA[]]>
</Line>
<Line Number="191">
<![CDATA[/* Section 9 - Parse the VarBind Type]]>
</Line>
<Line Number="192">
<![CDATA[Format is:]]>
</Line>
<Line Number="193">
<![CDATA[ [0] Varbind Type]]>
</Line>
<Line Number="194">
<![CDATA[ [1] Varbind Length]]>
</Line>
<Line Number="195">
<![CDATA[ [2-n] Object Identifier (OID)]]>
</Line>
<Line Number="196">
<![CDATA[ [n+1-m] Value]]>
</Line>
<Line Number="197">
<![CDATA[*/]]>
</Line>
<Line Number="198">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="199">
<![CDATA[	IF Packet[CurrentByte] <> 16#30 THEN				// If the VarBind Type is not a Sequence THEN]]>
</Line>
<Line Number="200">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="201">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="202">
<![CDATA[		Response_Invalid_Section := 901;					// Note the Section of invalid data]]>
</Line>
<Line Number="203">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="204">
<![CDATA[		SNMP_VarBind_Length := Packet[CurrentByte + 1];	// Record the VarBind Length]]>
</Line>
<Line Number="205">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="206">
<![CDATA[	CurrentByte := CurrentByte + 2;						// Increment the current byte past the block]]>
</Line>
<Line Number="207">
<![CDATA[END_IF;]]>
</Line>
<Line Number="208">
<![CDATA[]]>
</Line>
<Line Number="209">
<![CDATA[/* Section 10 - Parse The OID block]]>
</Line>
<Line Number="210">
<![CDATA[Format is:]]>
</Line>
<Line Number="211">
<![CDATA[ [0] OID Type]]>
</Line>
<Line Number="212">
<![CDATA[ [1] OID Length]]>
</Line>
<Line Number="213">
<![CDATA[ [2-n] OID Value]]>
</Line>
<Line Number="214">
<![CDATA[*/]]>
</Line>
<Line Number="215">
<![CDATA[/* Note: OID integers are encoded in 7-bit, with bit 8 encoded as 'More' signal.]]>
</Line>
<Line Number="216">
<![CDATA[Practically, this means if the value in the OID is over 127, encode the first 7 bits, then move the next 7 bits to the next byte.]]>
</Line>
<Line Number="217">
<![CDATA[This program has a limitation of a 2-byte value, to keep things simple, so the max value of any number in the OID is 32767.]]>
</Line>
<Line Number="218">
<![CDATA[*/]]>
</Line>
<Line Number="219">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="220">
<![CDATA[	IF Packet[CurrentByte] <> 16#06 THEN				// If the Packet Type is not an OID THEN]]>
</Line>
<Line Number="221">
<![CDATA[		Response_Invalid_Flag := 1;							// Throw an Invalid Resposne flag]]>
</Line>
<Line Number="222">
<![CDATA[		Response_Invalid_Location := CurrentByte;			// Record the position of the Invalid Response]]>
</Line>
<Line Number="223">
<![CDATA[		Response_Invalid_Section := 1001;					// Note the Section of invalid data]]>
</Line>
<Line Number="224">
<![CDATA[	ELSE												// If no errors have been found]]>
</Line>
<Line Number="225">
<![CDATA[		SNMP_OID_Length := Packet[CurrentByte + 1];			// Record the VarBind Length]]>
</Line>
<Line Number="226">
<![CDATA[		CurrentByte := CurrentByte + 2;						// Increment the current byte past the block]]>
</Line>
<Line Number="227">
<![CDATA[]]>
</Line>
<Line Number="228">
<![CDATA[		// OID Parsing Section]]>
</Line>
<Line Number="229">
<![CDATA[		SNMP_OID_Invalid_Flag := 0;		// Reset the OID Invalid Flag]]>
</Line>
<Line Number="230">
<![CDATA[		IF SNMP_OID_Length < 2 THEN 				// If we do not have enough fields in the OID, (at least 1.3.x)]]>
</Line>
<Line Number="231">
<![CDATA[			SNMP_OID_Invalid_Flag := 1;				// Flag the OID string as invalid]]>
</Line>
<Line Number="232">
<![CDATA[		ELSIF NOT SNMP_OID_Invalid_Flag THEN		// If the OID string is so far valid]]>
</Line>
<Line Number="233">
<![CDATA[			FOR I := 0 TO OID.LEN DO				// Clear the old OID string]]>
</Line>
<Line Number="234">
<![CDATA[				OID.DATA[I] := 0;]]>
</Line>
<Line Number="235">
<![CDATA[			END_FOR;]]>
</Line>
<Line Number="236">
<![CDATA[			OID.LEN := 0;]]>
</Line>
<Line Number="237">
<![CDATA[			FOR I := 0 TO SNMP_OID_Length - 1 BY 1 DO		// Parse through detected OID integers.]]>
</Line>
<Line Number="238">
<![CDATA[				IF I = 0 THEN 								// If we are on the first byte]]>
</Line>
<Line Number="239">
<![CDATA[					IF Packet[CurrentByte + I] = 16#2b THEN	// If the first byte is 2B (1.3 specially encoded)]]>
</Line>
<Line Number="240">
<![CDATA[						CONCAT(OID,String_1_3,OID);				// Add 1.3. to the OID string]]>
</Line>
<Line Number="241">
<![CDATA[						CONCAT(OID,String_Period,OID); 			// Add a '.' to the OID	]]>
</Line>
<Line Number="242">
<![CDATA[					ELSE									// Otherwise we cannot parse the OID properly]]>
</Line>
<Line Number="243">
<![CDATA[						SNMP_OID_Invalid_Flag := 1;					// Flag the OID string as invalid]]>
</Line>
<Line Number="244">
<![CDATA[					END_IF;					]]>
</Line>
<Line Number="245">
<![CDATA[				ELSIF NOT SNMP_OID_Invalid_Flag THEN				// If we are no longer on the first byte, and the OID is so far valid]]>
</Line>
<Line Number="246">
<![CDATA[					IF Packet[CurrentByte + I] < 127 AND Packet[CurrentByte + I] >= 0 THEN		// If our current byte has no Next bit]]>
</Line>
<Line Number="247">
<![CDATA[						DTOS(Packet[CurrentByte + I],TEMP_STRING);									// Convert it to a string]]>
</Line>
<Line Number="248">
<![CDATA[						CONCAT(OID,TEMP_STRING,OID);												// Add it to the OID]]>
</Line>
<Line Number="249">
<![CDATA[						CONCAT(OID,String_Period,OID); 												// Add a '.' to the OID]]>
</Line>
<Line Number="250">
<![CDATA[					ELSE												// If the byte has a Next bit (2+ bit number)]]>
</Line>
<Line Number="251">
<![CDATA[						IF Packet[CurrentByte + I + 1].7 THEN				// If the next byte also has a Next bit... (3+ bit number)]]>
</Line>
<Line Number="252">
<![CDATA[							IF Packet[CurrentByte + I + 2].7 THEN				// If the next next byte also has a next bit... (4+ bit number)]]>
</Line>
<Line Number="253">
<![CDATA[								IF Packet[CurrentByte + I + 3].7 THEN				// If the next byte also has a next bit... (5+ bit number)]]>
</Line>
<Line Number="254">
<![CDATA[									SNMP_OID_Invalid_Flag := 1;					]]>
</Line>
<Line Number="255">
<![CDATA[								ELSE											// We have a 4 byte number]]>
</Line>
<Line Number="256">
<![CDATA[									TEMP_DINT.0 := Packet[CurrentByte + I + 3].0;]]>
</Line>
<Line Number="257">
<![CDATA[									TEMP_DINT.1 := Packet[CurrentByte + I + 3].1;]]>
</Line>
<Line Number="258">
<![CDATA[									TEMP_DINT.2 := Packet[CurrentByte + I + 3].2;]]>
</Line>
<Line Number="259">
<![CDATA[									TEMP_DINT.3 := Packet[CurrentByte + I + 3].3;]]>
</Line>
<Line Number="260">
<![CDATA[									TEMP_DINT.4 := Packet[CurrentByte + I + 3].4;]]>
</Line>
<Line Number="261">
<![CDATA[									TEMP_DINT.5 := Packet[CurrentByte + I + 3].5;]]>
</Line>
<Line Number="262">
<![CDATA[									TEMP_DINT.6 := Packet[CurrentByte + I + 3].6;																							// If our current byte has a next bit]]>
</Line>
<Line Number="263">
<![CDATA[									TEMP_DINT.7 := Packet[CurrentByte + I + 2].0;]]>
</Line>
<Line Number="264">
<![CDATA[									TEMP_DINT.8 := Packet[CurrentByte + I + 2].1;]]>
</Line>
<Line Number="265">
<![CDATA[									TEMP_DINT.9 := Packet[CurrentByte + I + 2].2;]]>
</Line>
<Line Number="266">
<![CDATA[									TEMP_DINT.10 := Packet[CurrentByte + I + 2].3;]]>
</Line>
<Line Number="267">
<![CDATA[									TEMP_DINT.11 := Packet[CurrentByte + I + 2].4;]]>
</Line>
<Line Number="268">
<![CDATA[									TEMP_DINT.12 := Packet[CurrentByte + I + 2].5;]]>
</Line>
<Line Number="269">
<![CDATA[									TEMP_DINT.13 := Packet[CurrentByte + I + 2].6;]]>
</Line>
<Line Number="270">
<![CDATA[									TEMP_DINT.14 := Packet[CurrentByte + I + 1].0;]]>
</Line>
<Line Number="271">
<![CDATA[									TEMP_DINT.15 := Packet[CurrentByte + I + 1].1;]]>
</Line>
<Line Number="272">
<![CDATA[									TEMP_DINT.16 := Packet[CurrentByte + I + 1].2;]]>
</Line>
<Line Number="273">
<![CDATA[									TEMP_DINT.17 := Packet[CurrentByte + I + 1].3;]]>
</Line>
<Line Number="274">
<![CDATA[									TEMP_DINT.18 := Packet[CurrentByte + I + 1].4;]]>
</Line>
<Line Number="275">
<![CDATA[									TEMP_DINT.19 := Packet[CurrentByte + I + 1].5;]]>
</Line>
<Line Number="276">
<![CDATA[									TEMP_DINT.20 := Packet[CurrentByte + I + 1].6;]]>
</Line>
<Line Number="277">
<![CDATA[									TEMP_DINT.21 := Packet[CurrentByte + I].0;]]>
</Line>
<Line Number="278">
<![CDATA[									TEMP_DINT.22 := Packet[CurrentByte + I].1;]]>
</Line>
<Line Number="279">
<![CDATA[									TEMP_DINT.23 := Packet[CurrentByte + I].2;]]>
</Line>
<Line Number="280">
<![CDATA[									TEMP_DINT.24 := Packet[CurrentByte + I].3;]]>
</Line>
<Line Number="281">
<![CDATA[									TEMP_DINT.25 := Packet[CurrentByte + I].4;]]>
</Line>
<Line Number="282">
<![CDATA[									TEMP_DINT.26 := Packet[CurrentByte + I].5;]]>
</Line>
<Line Number="283">
<![CDATA[									TEMP_DINT.27 := Packet[CurrentByte + I].6;]]>
</Line>
<Line Number="284">
<![CDATA[									DTOS(TEMP_DINT,TEMP_STRING);				// Convert the temp DINT to a string]]>
</Line>
<Line Number="285">
<![CDATA[									CONCAT(OID,TEMP_STRING,OID);					// Add it to the OID]]>
</Line>
<Line Number="286">
<![CDATA[									CONCAT(OID,String_Period,OID); 					// Add a '.' to the OID]]>
</Line>
<Line Number="287">
<![CDATA[									I := I + 3;										// Skip the next byte]]>
</Line>
<Line Number="288">
<![CDATA[								END_IF;]]>
</Line>
<Line Number="289">
<![CDATA[							ELSE											// We have 3 byte number]]>
</Line>
<Line Number="290">
<![CDATA[								TEMP_DINT.0 := Packet[CurrentByte + I + 2].0;]]>
</Line>
<Line Number="291">
<![CDATA[								TEMP_DINT.1 := Packet[CurrentByte + I + 2].1;]]>
</Line>
<Line Number="292">
<![CDATA[								TEMP_DINT.2 := Packet[CurrentByte + I + 2].2;]]>
</Line>
<Line Number="293">
<![CDATA[								TEMP_DINT.3 := Packet[CurrentByte + I + 2].3;]]>
</Line>
<Line Number="294">
<![CDATA[								TEMP_DINT.4 := Packet[CurrentByte + I + 2].4;]]>
</Line>
<Line Number="295">
<![CDATA[								TEMP_DINT.5 := Packet[CurrentByte + I + 2].5;]]>
</Line>
<Line Number="296">
<![CDATA[								TEMP_DINT.6 := Packet[CurrentByte + I + 2].6;]]>
</Line>
<Line Number="297">
<![CDATA[								TEMP_DINT.7 := Packet[CurrentByte + I + 1].0;]]>
</Line>
<Line Number="298">
<![CDATA[								TEMP_DINT.8 := Packet[CurrentByte + I + 1].1;]]>
</Line>
<Line Number="299">
<![CDATA[								TEMP_DINT.9 := Packet[CurrentByte + I + 1].2;]]>
</Line>
<Line Number="300">
<![CDATA[								TEMP_DINT.10 := Packet[CurrentByte + I + 1].3;]]>
</Line>
<Line Number="301">
<![CDATA[								TEMP_DINT.11 := Packet[CurrentByte + I + 1].4;]]>
</Line>
<Line Number="302">
<![CDATA[								TEMP_DINT.12 := Packet[CurrentByte + I + 1].5;]]>
</Line>
<Line Number="303">
<![CDATA[								TEMP_DINT.13 := Packet[CurrentByte + I + 1].6;																							// If our current byte has a next bit]]>
</Line>
<Line Number="304">
<![CDATA[								TEMP_DINT.14 := Packet[CurrentByte + I].0;]]>
</Line>
<Line Number="305">
<![CDATA[								TEMP_DINT.15 := Packet[CurrentByte + I].1;]]>
</Line>
<Line Number="306">
<![CDATA[								TEMP_DINT.16 := Packet[CurrentByte + I].2;]]>
</Line>
<Line Number="307">
<![CDATA[								TEMP_DINT.17 := Packet[CurrentByte + I].3;]]>
</Line>
<Line Number="308">
<![CDATA[								TEMP_DINT.18 := Packet[CurrentByte + I].4;]]>
</Line>
<Line Number="309">
<![CDATA[								TEMP_DINT.19 := Packet[CurrentByte + I].5;]]>
</Line>
<Line Number="310">
<![CDATA[								TEMP_DINT.20 := Packet[CurrentByte + I].6;]]>
</Line>
<Line Number="311">
<![CDATA[								DTOS(TEMP_DINT,TEMP_STRING);				// Convert the temp DINT to a string]]>
</Line>
<Line Number="312">
<![CDATA[								CONCAT(OID,TEMP_STRING,OID);					// Add it to the OID]]>
</Line>
<Line Number="313">
<![CDATA[								CONCAT(OID,String_Period,OID); 					// Add a '.' to the OID]]>
</Line>
<Line Number="314">
<![CDATA[								I := I + 2;										// Skip the next byte]]>
</Line>
<Line Number="315">
<![CDATA[							END_IF;					]]>
</Line>
<Line Number="316">
<![CDATA[						ELSE												// We have a 2 byte number - copy the next two bytes of data into a temp DINT]]>
</Line>
<Line Number="317">
<![CDATA[							TEMP_DINT.0 := Packet[CurrentByte + I + 1].0;]]>
</Line>
<Line Number="318">
<![CDATA[							TEMP_DINT.1 := Packet[CurrentByte + I + 1].1;]]>
</Line>
<Line Number="319">
<![CDATA[							TEMP_DINT.2 := Packet[CurrentByte + I + 1].2;]]>
</Line>
<Line Number="320">
<![CDATA[							TEMP_DINT.3 := Packet[CurrentByte + I + 1].3;]]>
</Line>
<Line Number="321">
<![CDATA[							TEMP_DINT.4 := Packet[CurrentByte + I + 1].4;]]>
</Line>
<Line Number="322">
<![CDATA[							TEMP_DINT.5 := Packet[CurrentByte + I + 1].5;]]>
</Line>
<Line Number="323">
<![CDATA[							TEMP_DINT.6 := Packet[CurrentByte + I + 1].6;																							// If our current byte has a next bit]]>
</Line>
<Line Number="324">
<![CDATA[							TEMP_DINT.7 := Packet[CurrentByte + I].0;]]>
</Line>
<Line Number="325">
<![CDATA[							TEMP_DINT.8 := Packet[CurrentByte + I].1;]]>
</Line>
<Line Number="326">
<![CDATA[							TEMP_DINT.9 := Packet[CurrentByte + I].2;]]>
</Line>
<Line Number="327">
<![CDATA[							TEMP_DINT.10 := Packet[CurrentByte + I].3;]]>
</Line>
<Line Number="328">
<![CDATA[							TEMP_DINT.11 := Packet[CurrentByte + I].4;]]>
</Line>
<Line Number="329">
<![CDATA[							TEMP_DINT.12 := Packet[CurrentByte + I].5;]]>
</Line>
<Line Number="330">
<![CDATA[							TEMP_DINT.13 := Packet[CurrentByte + I].6;]]>
</Line>
<Line Number="331">
<![CDATA[							DTOS(TEMP_DINT,TEMP_STRING);				// Convert the temp DINT to a string]]>
</Line>
<Line Number="332">
<![CDATA[							CONCAT(OID,TEMP_STRING,OID);					// Add it to the OID]]>
</Line>
<Line Number="333">
<![CDATA[							CONCAT(OID,String_Period,OID); 					// Add a '.' to the OID]]>
</Line>
<Line Number="334">
<![CDATA[							I := I + 1;										// Skip the next byte]]>
</Line>
<Line Number="335">
<![CDATA[						END_IF;]]>
</Line>
<Line Number="336">
<![CDATA[					END_IF;]]>
</Line>
<Line Number="337">
<![CDATA[				END_IF;]]>
</Line>
<Line Number="338">
<![CDATA[			END_FOR;]]>
</Line>
<Line Number="339">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="340">
<![CDATA[		CurrentByte := CurrentByte + SNMP_OID_Length;					// Add the OID length to the current byte]]>
</Line>
<Line Number="341">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="342">
<![CDATA[END_IF;]]>
</Line>
<Line Number="343">
<![CDATA[]]>
</Line>
<Line Number="344">
<![CDATA[/* Create the Value block]]>
</Line>
<Line Number="345">
<![CDATA[Format is:]]>
</Line>
<Line Number="346">
<![CDATA[ [0] Type]]>
</Line>
<Line Number="347">
<![CDATA[ [1] Length]]>
</Line>
<Line Number="348">
<![CDATA[ [2-n] Value (if Type is not Null)]]>
</Line>
<Line Number="349">
<![CDATA[*/]]>
</Line>
<Line Number="350">
<![CDATA[IF NOT Response_Invalid_Flag THEN]]>
</Line>
<Line Number="351">
<![CDATA[	Output_Type := Packet[CurrentByte];		]]>
</Line>
<Line Number="352">
<![CDATA[	SNMP_Output_Length := Packet[CurrentByte + 1];]]>
</Line>
<Line Number="353">
<![CDATA[	FOR I := 0 TO 81 DO					// Clear the old string]]>
</Line>
<Line Number="354">
<![CDATA[		Output_String.DATA[I] := 0;]]>
</Line>
<Line Number="355">
<![CDATA[	END_FOR;]]>
</Line>
<Line Number="356">
<![CDATA[	Output_String.LEN := 0;]]>
</Line>
<Line Number="357">
<![CDATA[	Output_DINT := 0;]]>
</Line>
<Line Number="358">
<![CDATA[]]>
</Line>
<Line Number="359">
<![CDATA[	// Integer32 values need to reverse byte order.]]>
</Line>
<Line Number="360">
<![CDATA[	IF Output_Type = 16#02 OR Output_Type = 16#42 THEN				// If the Value Type is an Int32 (02) or Counter (42) THEN]]>
</Line>
<Line Number="361">
<![CDATA[		IF SNMP_Output_Length <= 4 THEN]]>
</Line>
<Line Number="362">
<![CDATA[			FOR I := 0 TO 3 DO					// Clear the temporary SINT array]]>
</Line>
<Line Number="363">
<![CDATA[				TEMP_SINT_ARRAY[I] := 0;]]>
</Line>
<Line Number="364">
<![CDATA[			END_FOR;	]]>
</Line>
<Line Number="365">
<![CDATA[			FOR I := 0 TO SNMP_Output_Length - 1 DO	// Copy the bytes to the temp array in reverse order]]>
</Line>
<Line Number="366">
<![CDATA[				COP(Packet[CurrentByte + 2 + I],TEMP_SINT_ARRAY[SNMP_Output_Length - I - 1],1);]]>
</Line>
<Line Number="367">
<![CDATA[			END_FOR;]]>
</Line>
<Line Number="368">
<![CDATA[			COP(TEMP_SINT_ARRAY[0],Output_DINT,1);	// Copy the temp array to the value]]>
</Line>
<Line Number="369">
<![CDATA[			Output_Is_Integer := 1;					// Set the appropriate output bits]]>
</Line>
<Line Number="370">
<![CDATA[			Output_Is_String := 0;]]>
</Line>
<Line Number="371">
<![CDATA[			Output_Is_Other := 0;]]>
</Line>
<Line Number="372">
<![CDATA[		ELSE							]]>
</Line>
<Line Number="373">
<![CDATA[			Output_Is_Integer := 0;]]>
</Line>
<Line Number="374">
<![CDATA[			Output_Is_String := 0;]]>
</Line>
<Line Number="375">
<![CDATA[			Output_Is_Other := 1;]]>
</Line>
<Line Number="376">
<![CDATA[		END_IF;]]>
</Line>
<Line Number="377">
<![CDATA[	ELSIF Output_Type = 16#04 THEN			// If the Value type is a String (04) THEN]]>
</Line>
<Line Number="378">
<![CDATA[		Output_String.LEN := SNMP_Output_Length;]]>
</Line>
<Line Number="379">
<![CDATA[		COP(Packet[CurrentByte + 2],Output_String.DATA[0],SNMP_Output_Length);	// Copy the string data]]>
</Line>
<Line Number="380">
<![CDATA[		Output_Is_Integer := 0;				// Set the appropriate output bits]]>
</Line>
<Line Number="381">
<![CDATA[		Output_Is_String := 1;]]>
</Line>
<Line Number="382">
<![CDATA[		Output_Is_Other := 0;]]>
</Line>
<Line Number="383">
<![CDATA[	ELSE									// Otherwise the Value cannot be parsed.  Data is available in the packet]]>
</Line>
<Line Number="384">
<![CDATA[		Output_Is_Integer := 0;]]>
</Line>
<Line Number="385">
<![CDATA[		Output_Is_String := 0;]]>
</Line>
<Line Number="386">
<![CDATA[		Output_Is_Other := 1;]]>
</Line>
<Line Number="387">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="388">
<![CDATA[	CurrentByte := CurrentByte + 2;						// Increment the current byte past the block]]>
</Line>
<Line Number="389">
<![CDATA[END_IF;]]>
</Line>
<Line Number="390">
<![CDATA[]]>
</Line>
<Line Number="391">
<![CDATA[Response_Invalid := Response_Invalid_Flag;	// If we have flagged an invalid response in this scan, set the output]]>
</Line>
<Line Number="392">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
<Tags Use="Context">
<Tag Name="SNMP_ConnectionData" TagType="Base" DataType="SLO_SNMP_Connection_Data" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[SNMP Connection Data for Message Blocks]]>
</Description>
<Comments>
<Comment Operand=".ONS.0">
<![CDATA[Socket CreateMessage Oneshot]]>
</Comment>
<Comment Operand=".ONS.1">
<![CDATA[Socket ReadMessage Oneshot]]>
</Comment>
<Comment Operand=".ONS.2">
<![CDATA[Socket Clear Connections CreateMessage Oneshot]]>
</Comment>
<Comment Operand=".ONS.6">
<![CDATA[Socket Clear Connections WriteMessage Oneshot]]>
</Comment>
<Comment Operand=".ONS.7">
<![CDATA[Socket Clear Connections ReadMessage Oneshot]]>
</Comment>
<Comment Operand=".ONS.8">
<![CDATA[Socket Clear Connections First Scan Oneshot]]>
</Comment>
</Comments>
<Data Format="L5K">
<![CDATA[[[2,[2,0,0]],21131,[30000,[2,161,-1407896571],42,[48,40,2,1,0,4,6,112,117,98,108,105,99,-95,27,2,1,12,2,1,0,2,1,0,48,16,48,14,6,10
		,43,6,1,4,1,-124,22,1,2,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],42,[0,127],[[2,161,-1407896571],45,[48,43
		,2,1,0,4,6,112,117,98,108,105,99,-94,30,2,1,12,2,1,0,2,1,0,48,19,48,17,6,11,43,6,1,4,1,-124,22,1,2,1,0,2,2,38,92,1,119,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],[-1609120210,500,500],3,[1319026,30000,0],4]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="SLO_SNMP_Connection_Data">
<StructureMember Name="Socket_Create_Input" DataType="SLO_Socket_CreateParams">
<DataValueMember Name="Instance" DataType="DINT" Radix="Decimal" Value="2"/>
<StructureMember Name="Addr" DataType="SLO_Socket_SockAddr">
<DataValueMember Name="Family" DataType="INT" Radix="Decimal" Value="2"/>
<DataValueMember Name="Port" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Addr" DataType="DINT" Radix="Decimal" Value="0"/>
</StructureMember>
</StructureMember>
<DataValueMember Name="Socket_Create_Output" DataType="DINT" Radix="Decimal" Value="21131"/>
<StructureMember Name="Socket_Write_Input" DataType="SLO_Socket_WriteParams">
<DataValueMember Name="Timeout" DataType="DINT" Radix="Decimal" Value="30000"/>
<StructureMember Name="ToAddr" DataType="SLO_Socket_SockAddr">
<DataValueMember Name="Family" DataType="INT" Radix="Decimal" Value="2"/>
<DataValueMember Name="Port" DataType="INT" Radix="Decimal" Value="161"/>
<DataValueMember Name="Addr" DataType="DINT" Radix="Decimal" Value="-1407896571"/>
</StructureMember>
<DataValueMember Name="BufLen" DataType="DINT" Radix="Decimal" Value="42"/>
<ArrayMember Name="Buf" DataType="SINT" Dimensions="484" Radix="Decimal">
<Element Index="[0]" Value="48"/>
<Element Index="[1]" Value="40"/>
<Element Index="[2]" Value="2"/>
<Element Index="[3]" Value="1"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="4"/>
<Element Index="[6]" Value="6"/>
<Element Index="[7]" Value="112"/>
<Element Index="[8]" Value="117"/>
<Element Index="[9]" Value="98"/>
<Element Index="[10]" Value="108"/>
<Element Index="[11]" Value="105"/>
<Element Index="[12]" Value="99"/>
<Element Index="[13]" Value="-95"/>
<Element Index="[14]" Value="27"/>
<Element Index="[15]" Value="2"/>
<Element Index="[16]" Value="1"/>
<Element Index="[17]" Value="12"/>
<Element Index="[18]" Value="2"/>
<Element Index="[19]" Value="1"/>
<Element Index="[20]" Value="0"/>
<Element Index="[21]" Value="2"/>
<Element Index="[22]" Value="1"/>
<Element Index="[23]" Value="0"/>
<Element Index="[24]" Value="48"/>
<Element Index="[25]" Value="16"/>
<Element Index="[26]" Value="48"/>
<Element Index="[27]" Value="14"/>
<Element Index="[28]" Value="6"/>
<Element Index="[29]" Value="10"/>
<Element Index="[30]" Value="43"/>
<Element Index="[31]" Value="6"/>
<Element Index="[32]" Value="1"/>
<Element Index="[33]" Value="4"/>
<Element Index="[34]" Value="1"/>
<Element Index="[35]" Value="-124"/>
<Element Index="[36]" Value="22"/>
<Element Index="[37]" Value="1"/>
<Element Index="[38]" Value="2"/>
<Element Index="[39]" Value="1"/>
<Element Index="[40]" Value="5"/>
<Element Index="[41]" Value="0"/>
<Element Index="[42]" Value="0"/>
<Element Index="[43]" Value="0"/>
<Element Index="[44]" Value="0"/>
<Element Index="[45]" Value="0"/>
<Element Index="[46]" Value="0"/>
<Element Index="[47]" Value="0"/>
<Element Index="[48]" Value="0"/>
<Element Index="[49]" Value="0"/>
<Element Index="[50]" Value="0"/>
<Element Index="[51]" Value="0"/>
<Element Index="[52]" Value="0"/>
<Element Index="[53]" Value="0"/>
<Element Index="[54]" Value="0"/>
<Element Index="[55]" Value="0"/>
<Element Index="[56]" Value="0"/>
<Element Index="[57]" Value="0"/>
<Element Index="[58]" Value="0"/>
<Element Index="[59]" Value="0"/>
<Element Index="[60]" Value="0"/>
<Element Index="[61]" Value="0"/>
<Element Index="[62]" Value="0"/>
<Element Index="[63]" Value="0"/>
<Element Index="[64]" Value="0"/>
<Element Index="[65]" Value="0"/>
<Element Index="[66]" Value="0"/>
<Element Index="[67]" Value="0"/>
<Element Index="[68]" Value="0"/>
<Element Index="[69]" Value="0"/>
<Element Index="[70]" Value="0"/>
<Element Index="[71]" Value="0"/>
<Element Index="[72]" Value="0"/>
<Element Index="[73]" Value="0"/>
<Element Index="[74]" Value="0"/>
<Element Index="[75]" Value="0"/>
<Element Index="[76]" Value="0"/>
<Element Index="[77]" Value="0"/>
<Element Index="[78]" Value="0"/>
<Element Index="[79]" Value="0"/>
<Element Index="[80]" Value="0"/>
<Element Index="[81]" Value="0"/>
<Element Index="[82]" Value="0"/>
<Element Index="[83]" Value="0"/>
<Element Index="[84]" Value="0"/>
<Element Index="[85]" Value="0"/>
<Element Index="[86]" Value="0"/>
<Element Index="[87]" Value="0"/>
<Element Index="[88]" Value="0"/>
<Element Index="[89]" Value="0"/>
<Element Index="[90]" Value="0"/>
<Element Index="[91]" Value="0"/>
<Element Index="[92]" Value="0"/>
<Element Index="[93]" Value="0"/>
<Element Index="[94]" Value="0"/>
<Element Index="[95]" Value="0"/>
<Element Index="[96]" Value="0"/>
<Element Index="[97]" Value="0"/>
<Element Index="[98]" Value="0"/>
<Element Index="[99]" Value="0"/>
<Element Index="[100]" Value="0"/>
<Element Index="[101]" Value="0"/>
<Element Index="[102]" Value="0"/>
<Element Index="[103]" Value="0"/>
<Element Index="[104]" Value="0"/>
<Element Index="[105]" Value="0"/>
<Element Index="[106]" Value="0"/>
<Element Index="[107]" Value="0"/>
<Element Index="[108]" Value="0"/>
<Element Index="[109]" Value="0"/>
<Element Index="[110]" Value="0"/>
<Element Index="[111]" Value="0"/>
<Element Index="[112]" Value="0"/>
<Element Index="[113]" Value="0"/>
<Element Index="[114]" Value="0"/>
<Element Index="[115]" Value="0"/>
<Element Index="[116]" Value="0"/>
<Element Index="[117]" Value="0"/>
<Element Index="[118]" Value="0"/>
<Element Index="[119]" Value="0"/>
<Element Index="[120]" Value="0"/>
<Element Index="[121]" Value="0"/>
<Element Index="[122]" Value="0"/>
<Element Index="[123]" Value="0"/>
<Element Index="[124]" Value="0"/>
<Element Index="[125]" Value="0"/>
<Element Index="[126]" Value="0"/>
<Element Index="[127]" Value="0"/>
<Element Index="[128]" Value="0"/>
<Element Index="[129]" Value="0"/>
<Element Index="[130]" Value="0"/>
<Element Index="[131]" Value="0"/>
<Element Index="[132]" Value="0"/>
<Element Index="[133]" Value="0"/>
<Element Index="[134]" Value="0"/>
<Element Index="[135]" Value="0"/>
<Element Index="[136]" Value="0"/>
<Element Index="[137]" Value="0"/>
<Element Index="[138]" Value="0"/>
<Element Index="[139]" Value="0"/>
<Element Index="[140]" Value="0"/>
<Element Index="[141]" Value="0"/>
<Element Index="[142]" Value="0"/>
<Element Index="[143]" Value="0"/>
<Element Index="[144]" Value="0"/>
<Element Index="[145]" Value="0"/>
<Element Index="[146]" Value="0"/>
<Element Index="[147]" Value="0"/>
<Element Index="[148]" Value="0"/>
<Element Index="[149]" Value="0"/>
<Element Index="[150]" Value="0"/>
<Element Index="[151]" Value="0"/>
<Element Index="[152]" Value="0"/>
<Element Index="[153]" Value="0"/>
<Element Index="[154]" Value="0"/>
<Element Index="[155]" Value="0"/>
<Element Index="[156]" Value="0"/>
<Element Index="[157]" Value="0"/>
<Element Index="[158]" Value="0"/>
<Element Index="[159]" Value="0"/>
<Element Index="[160]" Value="0"/>
<Element Index="[161]" Value="0"/>
<Element Index="[162]" Value="0"/>
<Element Index="[163]" Value="0"/>
<Element Index="[164]" Value="0"/>
<Element Index="[165]" Value="0"/>
<Element Index="[166]" Value="0"/>
<Element Index="[167]" Value="0"/>
<Element Index="[168]" Value="0"/>
<Element Index="[169]" Value="0"/>
<Element Index="[170]" Value="0"/>
<Element Index="[171]" Value="0"/>
<Element Index="[172]" Value="0"/>
<Element Index="[173]" Value="0"/>
<Element Index="[174]" Value="0"/>
<Element Index="[175]" Value="0"/>
<Element Index="[176]" Value="0"/>
<Element Index="[177]" Value="0"/>
<Element Index="[178]" Value="0"/>
<Element Index="[179]" Value="0"/>
<Element Index="[180]" Value="0"/>
<Element Index="[181]" Value="0"/>
<Element Index="[182]" Value="0"/>
<Element Index="[183]" Value="0"/>
<Element Index="[184]" Value="0"/>
<Element Index="[185]" Value="0"/>
<Element Index="[186]" Value="0"/>
<Element Index="[187]" Value="0"/>
<Element Index="[188]" Value="0"/>
<Element Index="[189]" Value="0"/>
<Element Index="[190]" Value="0"/>
<Element Index="[191]" Value="0"/>
<Element Index="[192]" Value="0"/>
<Element Index="[193]" Value="0"/>
<Element Index="[194]" Value="0"/>
<Element Index="[195]" Value="0"/>
<Element Index="[196]" Value="0"/>
<Element Index="[197]" Value="0"/>
<Element Index="[198]" Value="0"/>
<Element Index="[199]" Value="0"/>
<Element Index="[200]" Value="0"/>
<Element Index="[201]" Value="0"/>
<Element Index="[202]" Value="0"/>
<Element Index="[203]" Value="0"/>
<Element Index="[204]" Value="0"/>
<Element Index="[205]" Value="0"/>
<Element Index="[206]" Value="0"/>
<Element Index="[207]" Value="0"/>
<Element Index="[208]" Value="0"/>
<Element Index="[209]" Value="0"/>
<Element Index="[210]" Value="0"/>
<Element Index="[211]" Value="0"/>
<Element Index="[212]" Value="0"/>
<Element Index="[213]" Value="0"/>
<Element Index="[214]" Value="0"/>
<Element Index="[215]" Value="0"/>
<Element Index="[216]" Value="0"/>
<Element Index="[217]" Value="0"/>
<Element Index="[218]" Value="0"/>
<Element Index="[219]" Value="0"/>
<Element Index="[220]" Value="0"/>
<Element Index="[221]" Value="0"/>
<Element Index="[222]" Value="0"/>
<Element Index="[223]" Value="0"/>
<Element Index="[224]" Value="0"/>
<Element Index="[225]" Value="0"/>
<Element Index="[226]" Value="0"/>
<Element Index="[227]" Value="0"/>
<Element Index="[228]" Value="0"/>
<Element Index="[229]" Value="0"/>
<Element Index="[230]" Value="0"/>
<Element Index="[231]" Value="0"/>
<Element Index="[232]" Value="0"/>
<Element Index="[233]" Value="0"/>
<Element Index="[234]" Value="0"/>
<Element Index="[235]" Value="0"/>
<Element Index="[236]" Value="0"/>
<Element Index="[237]" Value="0"/>
<Element Index="[238]" Value="0"/>
<Element Index="[239]" Value="0"/>
<Element Index="[240]" Value="0"/>
<Element Index="[241]" Value="0"/>
<Element Index="[242]" Value="0"/>
<Element Index="[243]" Value="0"/>
<Element Index="[244]" Value="0"/>
<Element Index="[245]" Value="0"/>
<Element Index="[246]" Value="0"/>
<Element Index="[247]" Value="0"/>
<Element Index="[248]" Value="0"/>
<Element Index="[249]" Value="0"/>
<Element Index="[250]" Value="0"/>
<Element Index="[251]" Value="0"/>
<Element Index="[252]" Value="0"/>
<Element Index="[253]" Value="0"/>
<Element Index="[254]" Value="0"/>
<Element Index="[255]" Value="0"/>
<Element Index="[256]" Value="0"/>
<Element Index="[257]" Value="0"/>
<Element Index="[258]" Value="0"/>
<Element Index="[259]" Value="0"/>
<Element Index="[260]" Value="0"/>
<Element Index="[261]" Value="0"/>
<Element Index="[262]" Value="0"/>
<Element Index="[263]" Value="0"/>
<Element Index="[264]" Value="0"/>
<Element Index="[265]" Value="0"/>
<Element Index="[266]" Value="0"/>
<Element Index="[267]" Value="0"/>
<Element Index="[268]" Value="0"/>
<Element Index="[269]" Value="0"/>
<Element Index="[270]" Value="0"/>
<Element Index="[271]" Value="0"/>
<Element Index="[272]" Value="0"/>
<Element Index="[273]" Value="0"/>
<Element Index="[274]" Value="0"/>
<Element Index="[275]" Value="0"/>
<Element Index="[276]" Value="0"/>
<Element Index="[277]" Value="0"/>
<Element Index="[278]" Value="0"/>
<Element Index="[279]" Value="0"/>
<Element Index="[280]" Value="0"/>
<Element Index="[281]" Value="0"/>
<Element Index="[282]" Value="0"/>
<Element Index="[283]" Value="0"/>
<Element Index="[284]" Value="0"/>
<Element Index="[285]" Value="0"/>
<Element Index="[286]" Value="0"/>
<Element Index="[287]" Value="0"/>
<Element Index="[288]" Value="0"/>
<Element Index="[289]" Value="0"/>
<Element Index="[290]" Value="0"/>
<Element Index="[291]" Value="0"/>
<Element Index="[292]" Value="0"/>
<Element Index="[293]" Value="0"/>
<Element Index="[294]" Value="0"/>
<Element Index="[295]" Value="0"/>
<Element Index="[296]" Value="0"/>
<Element Index="[297]" Value="0"/>
<Element Index="[298]" Value="0"/>
<Element Index="[299]" Value="0"/>
<Element Index="[300]" Value="0"/>
<Element Index="[301]" Value="0"/>
<Element Index="[302]" Value="0"/>
<Element Index="[303]" Value="0"/>
<Element Index="[304]" Value="0"/>
<Element Index="[305]" Value="0"/>
<Element Index="[306]" Value="0"/>
<Element Index="[307]" Value="0"/>
<Element Index="[308]" Value="0"/>
<Element Index="[309]" Value="0"/>
<Element Index="[310]" Value="0"/>
<Element Index="[311]" Value="0"/>
<Element Index="[312]" Value="0"/>
<Element Index="[313]" Value="0"/>
<Element Index="[314]" Value="0"/>
<Element Index="[315]" Value="0"/>
<Element Index="[316]" Value="0"/>
<Element Index="[317]" Value="0"/>
<Element Index="[318]" Value="0"/>
<Element Index="[319]" Value="0"/>
<Element Index="[320]" Value="0"/>
<Element Index="[321]" Value="0"/>
<Element Index="[322]" Value="0"/>
<Element Index="[323]" Value="0"/>
<Element Index="[324]" Value="0"/>
<Element Index="[325]" Value="0"/>
<Element Index="[326]" Value="0"/>
<Element Index="[327]" Value="0"/>
<Element Index="[328]" Value="0"/>
<Element Index="[329]" Value="0"/>
<Element Index="[330]" Value="0"/>
<Element Index="[331]" Value="0"/>
<Element Index="[332]" Value="0"/>
<Element Index="[333]" Value="0"/>
<Element Index="[334]" Value="0"/>
<Element Index="[335]" Value="0"/>
<Element Index="[336]" Value="0"/>
<Element Index="[337]" Value="0"/>
<Element Index="[338]" Value="0"/>
<Element Index="[339]" Value="0"/>
<Element Index="[340]" Value="0"/>
<Element Index="[341]" Value="0"/>
<Element Index="[342]" Value="0"/>
<Element Index="[343]" Value="0"/>
<Element Index="[344]" Value="0"/>
<Element Index="[345]" Value="0"/>
<Element Index="[346]" Value="0"/>
<Element Index="[347]" Value="0"/>
<Element Index="[348]" Value="0"/>
<Element Index="[349]" Value="0"/>
<Element Index="[350]" Value="0"/>
<Element Index="[351]" Value="0"/>
<Element Index="[352]" Value="0"/>
<Element Index="[353]" Value="0"/>
<Element Index="[354]" Value="0"/>
<Element Index="[355]" Value="0"/>
<Element Index="[356]" Value="0"/>
<Element Index="[357]" Value="0"/>
<Element Index="[358]" Value="0"/>
<Element Index="[359]" Value="0"/>
<Element Index="[360]" Value="0"/>
<Element Index="[361]" Value="0"/>
<Element Index="[362]" Value="0"/>
<Element Index="[363]" Value="0"/>
<Element Index="[364]" Value="0"/>
<Element Index="[365]" Value="0"/>
<Element Index="[366]" Value="0"/>
<Element Index="[367]" Value="0"/>
<Element Index="[368]" Value="0"/>
<Element Index="[369]" Value="0"/>
<Element Index="[370]" Value="0"/>
<Element Index="[371]" Value="0"/>
<Element Index="[372]" Value="0"/>
<Element Index="[373]" Value="0"/>
<Element Index="[374]" Value="0"/>
<Element Index="[375]" Value="0"/>
<Element Index="[376]" Value="0"/>
<Element Index="[377]" Value="0"/>
<Element Index="[378]" Value="0"/>
<Element Index="[379]" Value="0"/>
<Element Index="[380]" Value="0"/>
<Element Index="[381]" Value="0"/>
<Element Index="[382]" Value="0"/>
<Element Index="[383]" Value="0"/>
<Element Index="[384]" Value="0"/>
<Element Index="[385]" Value="0"/>
<Element Index="[386]" Value="0"/>
<Element Index="[387]" Value="0"/>
<Element Index="[388]" Value="0"/>
<Element Index="[389]" Value="0"/>
<Element Index="[390]" Value="0"/>
<Element Index="[391]" Value="0"/>
<Element Index="[392]" Value="0"/>
<Element Index="[393]" Value="0"/>
<Element Index="[394]" Value="0"/>
<Element Index="[395]" Value="0"/>
<Element Index="[396]" Value="0"/>
<Element Index="[397]" Value="0"/>
<Element Index="[398]" Value="0"/>
<Element Index="[399]" Value="0"/>
<Element Index="[400]" Value="0"/>
<Element Index="[401]" Value="0"/>
<Element Index="[402]" Value="0"/>
<Element Index="[403]" Value="0"/>
<Element Index="[404]" Value="0"/>
<Element Index="[405]" Value="0"/>
<Element Index="[406]" Value="0"/>
<Element Index="[407]" Value="0"/>
<Element Index="[408]" Value="0"/>
<Element Index="[409]" Value="0"/>
<Element Index="[410]" Value="0"/>
<Element Index="[411]" Value="0"/>
<Element Index="[412]" Value="0"/>
<Element Index="[413]" Value="0"/>
<Element Index="[414]" Value="0"/>
<Element Index="[415]" Value="0"/>
<Element Index="[416]" Value="0"/>
<Element Index="[417]" Value="0"/>
<Element Index="[418]" Value="0"/>
<Element Index="[419]" Value="0"/>
<Element Index="[420]" Value="0"/>
<Element Index="[421]" Value="0"/>
<Element Index="[422]" Value="0"/>
<Element Index="[423]" Value="0"/>
<Element Index="[424]" Value="0"/>
<Element Index="[425]" Value="0"/>
<Element Index="[426]" Value="0"/>
<Element Index="[427]" Value="0"/>
<Element Index="[428]" Value="0"/>
<Element Index="[429]" Value="0"/>
<Element Index="[430]" Value="0"/>
<Element Index="[431]" Value="0"/>
<Element Index="[432]" Value="0"/>
<Element Index="[433]" Value="0"/>
<Element Index="[434]" Value="0"/>
<Element Index="[435]" Value="0"/>
<Element Index="[436]" Value="0"/>
<Element Index="[437]" Value="0"/>
<Element Index="[438]" Value="0"/>
<Element Index="[439]" Value="0"/>
<Element Index="[440]" Value="0"/>
<Element Index="[441]" Value="0"/>
<Element Index="[442]" Value="0"/>
<Element Index="[443]" Value="0"/>
<Element Index="[444]" Value="0"/>
<Element Index="[445]" Value="0"/>
<Element Index="[446]" Value="0"/>
<Element Index="[447]" Value="0"/>
<Element Index="[448]" Value="0"/>
<Element Index="[449]" Value="0"/>
<Element Index="[450]" Value="0"/>
<Element Index="[451]" Value="0"/>
<Element Index="[452]" Value="0"/>
<Element Index="[453]" Value="0"/>
<Element Index="[454]" Value="0"/>
<Element Index="[455]" Value="0"/>
<Element Index="[456]" Value="0"/>
<Element Index="[457]" Value="0"/>
<Element Index="[458]" Value="0"/>
<Element Index="[459]" Value="0"/>
<Element Index="[460]" Value="0"/>
<Element Index="[461]" Value="0"/>
<Element Index="[462]" Value="0"/>
<Element Index="[463]" Value="0"/>
<Element Index="[464]" Value="0"/>
<Element Index="[465]" Value="0"/>
<Element Index="[466]" Value="0"/>
<Element Index="[467]" Value="0"/>
<Element Index="[468]" Value="0"/>
<Element Index="[469]" Value="0"/>
<Element Index="[470]" Value="0"/>
<Element Index="[471]" Value="0"/>
<Element Index="[472]" Value="0"/>
<Element Index="[473]" Value="0"/>
<Element Index="[474]" Value="0"/>
<Element Index="[475]" Value="0"/>
<Element Index="[476]" Value="0"/>
<Element Index="[477]" Value="0"/>
<Element Index="[478]" Value="0"/>
<Element Index="[479]" Value="0"/>
<Element Index="[480]" Value="0"/>
<Element Index="[481]" Value="0"/>
<Element Index="[482]" Value="0"/>
<Element Index="[483]" Value="0"/>
</ArrayMember>
</StructureMember>
<DataValueMember Name="Socket_Write_Output" DataType="DINT" Radix="Decimal" Value="42"/>
<StructureMember Name="Socket_Read_Input" DataType="SLO_Socket_ReadParams">
<DataValueMember Name="Timeout" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="BufLen" DataType="DINT" Radix="Decimal" Value="127"/>
</StructureMember>
<StructureMember Name="Socket_Read_Output" DataType="SLO_Socket_ReadResponse">
<StructureMember Name="FromAddr" DataType="SLO_Socket_SockAddr">
<DataValueMember Name="Family" DataType="INT" Radix="Decimal" Value="2"/>
<DataValueMember Name="Port" DataType="INT" Radix="Decimal" Value="161"/>
<DataValueMember Name="Addr" DataType="DINT" Radix="Decimal" Value="-1407896571"/>
</StructureMember>
<DataValueMember Name="BufLen" DataType="DINT" Radix="Decimal" Value="45"/>
<ArrayMember Name="Buf" DataType="SINT" Dimensions="484" Radix="Decimal">
<Element Index="[0]" Value="48"/>
<Element Index="[1]" Value="43"/>
<Element Index="[2]" Value="2"/>
<Element Index="[3]" Value="1"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="4"/>
<Element Index="[6]" Value="6"/>
<Element Index="[7]" Value="112"/>
<Element Index="[8]" Value="117"/>
<Element Index="[9]" Value="98"/>
<Element Index="[10]" Value="108"/>
<Element Index="[11]" Value="105"/>
<Element Index="[12]" Value="99"/>
<Element Index="[13]" Value="-94"/>
<Element Index="[14]" Value="30"/>
<Element Index="[15]" Value="2"/>
<Element Index="[16]" Value="1"/>
<Element Index="[17]" Value="12"/>
<Element Index="[18]" Value="2"/>
<Element Index="[19]" Value="1"/>
<Element Index="[20]" Value="0"/>
<Element Index="[21]" Value="2"/>
<Element Index="[22]" Value="1"/>
<Element Index="[23]" Value="0"/>
<Element Index="[24]" Value="48"/>
<Element Index="[25]" Value="19"/>
<Element Index="[26]" Value="48"/>
<Element Index="[27]" Value="17"/>
<Element Index="[28]" Value="6"/>
<Element Index="[29]" Value="11"/>
<Element Index="[30]" Value="43"/>
<Element Index="[31]" Value="6"/>
<Element Index="[32]" Value="1"/>
<Element Index="[33]" Value="4"/>
<Element Index="[34]" Value="1"/>
<Element Index="[35]" Value="-124"/>
<Element Index="[36]" Value="22"/>
<Element Index="[37]" Value="1"/>
<Element Index="[38]" Value="2"/>
<Element Index="[39]" Value="1"/>
<Element Index="[40]" Value="0"/>
<Element Index="[41]" Value="2"/>
<Element Index="[42]" Value="2"/>
<Element Index="[43]" Value="38"/>
<Element Index="[44]" Value="92"/>
<Element Index="[45]" Value="1"/>
<Element Index="[46]" Value="119"/>
<Element Index="[47]" Value="0"/>
<Element Index="[48]" Value="0"/>
<Element Index="[49]" Value="0"/>
<Element Index="[50]" Value="0"/>
<Element Index="[51]" Value="0"/>
<Element Index="[52]" Value="0"/>
<Element Index="[53]" Value="0"/>
<Element Index="[54]" Value="0"/>
<Element Index="[55]" Value="0"/>
<Element Index="[56]" Value="0"/>
<Element Index="[57]" Value="0"/>
<Element Index="[58]" Value="0"/>
<Element Index="[59]" Value="0"/>
<Element Index="[60]" Value="0"/>
<Element Index="[61]" Value="0"/>
<Element Index="[62]" Value="0"/>
<Element Index="[63]" Value="0"/>
<Element Index="[64]" Value="0"/>
<Element Index="[65]" Value="0"/>
<Element Index="[66]" Value="0"/>
<Element Index="[67]" Value="0"/>
<Element Index="[68]" Value="0"/>
<Element Index="[69]" Value="0"/>
<Element Index="[70]" Value="0"/>
<Element Index="[71]" Value="0"/>
<Element Index="[72]" Value="0"/>
<Element Index="[73]" Value="0"/>
<Element Index="[74]" Value="0"/>
<Element Index="[75]" Value="0"/>
<Element Index="[76]" Value="0"/>
<Element Index="[77]" Value="0"/>
<Element Index="[78]" Value="0"/>
<Element Index="[79]" Value="0"/>
<Element Index="[80]" Value="0"/>
<Element Index="[81]" Value="0"/>
<Element Index="[82]" Value="0"/>
<Element Index="[83]" Value="0"/>
<Element Index="[84]" Value="0"/>
<Element Index="[85]" Value="0"/>
<Element Index="[86]" Value="0"/>
<Element Index="[87]" Value="0"/>
<Element Index="[88]" Value="0"/>
<Element Index="[89]" Value="0"/>
<Element Index="[90]" Value="0"/>
<Element Index="[91]" Value="0"/>
<Element Index="[92]" Value="0"/>
<Element Index="[93]" Value="0"/>
<Element Index="[94]" Value="0"/>
<Element Index="[95]" Value="0"/>
<Element Index="[96]" Value="0"/>
<Element Index="[97]" Value="0"/>
<Element Index="[98]" Value="0"/>
<Element Index="[99]" Value="0"/>
<Element Index="[100]" Value="0"/>
<Element Index="[101]" Value="0"/>
<Element Index="[102]" Value="0"/>
<Element Index="[103]" Value="0"/>
<Element Index="[104]" Value="0"/>
<Element Index="[105]" Value="0"/>
<Element Index="[106]" Value="0"/>
<Element Index="[107]" Value="0"/>
<Element Index="[108]" Value="0"/>
<Element Index="[109]" Value="0"/>
<Element Index="[110]" Value="0"/>
<Element Index="[111]" Value="0"/>
<Element Index="[112]" Value="0"/>
<Element Index="[113]" Value="0"/>
<Element Index="[114]" Value="0"/>
<Element Index="[115]" Value="0"/>
<Element Index="[116]" Value="0"/>
<Element Index="[117]" Value="0"/>
<Element Index="[118]" Value="0"/>
<Element Index="[119]" Value="0"/>
<Element Index="[120]" Value="0"/>
<Element Index="[121]" Value="0"/>
<Element Index="[122]" Value="0"/>
<Element Index="[123]" Value="0"/>
<Element Index="[124]" Value="0"/>
<Element Index="[125]" Value="0"/>
<Element Index="[126]" Value="0"/>
<Element Index="[127]" Value="0"/>
<Element Index="[128]" Value="0"/>
<Element Index="[129]" Value="0"/>
<Element Index="[130]" Value="0"/>
<Element Index="[131]" Value="0"/>
<Element Index="[132]" Value="0"/>
<Element Index="[133]" Value="0"/>
<Element Index="[134]" Value="0"/>
<Element Index="[135]" Value="0"/>
<Element Index="[136]" Value="0"/>
<Element Index="[137]" Value="0"/>
<Element Index="[138]" Value="0"/>
<Element Index="[139]" Value="0"/>
<Element Index="[140]" Value="0"/>
<Element Index="[141]" Value="0"/>
<Element Index="[142]" Value="0"/>
<Element Index="[143]" Value="0"/>
<Element Index="[144]" Value="0"/>
<Element Index="[145]" Value="0"/>
<Element Index="[146]" Value="0"/>
<Element Index="[147]" Value="0"/>
<Element Index="[148]" Value="0"/>
<Element Index="[149]" Value="0"/>
<Element Index="[150]" Value="0"/>
<Element Index="[151]" Value="0"/>
<Element Index="[152]" Value="0"/>
<Element Index="[153]" Value="0"/>
<Element Index="[154]" Value="0"/>
<Element Index="[155]" Value="0"/>
<Element Index="[156]" Value="0"/>
<Element Index="[157]" Value="0"/>
<Element Index="[158]" Value="0"/>
<Element Index="[159]" Value="0"/>
<Element Index="[160]" Value="0"/>
<Element Index="[161]" Value="0"/>
<Element Index="[162]" Value="0"/>
<Element Index="[163]" Value="0"/>
<Element Index="[164]" Value="0"/>
<Element Index="[165]" Value="0"/>
<Element Index="[166]" Value="0"/>
<Element Index="[167]" Value="0"/>
<Element Index="[168]" Value="0"/>
<Element Index="[169]" Value="0"/>
<Element Index="[170]" Value="0"/>
<Element Index="[171]" Value="0"/>
<Element Index="[172]" Value="0"/>
<Element Index="[173]" Value="0"/>
<Element Index="[174]" Value="0"/>
<Element Index="[175]" Value="0"/>
<Element Index="[176]" Value="0"/>
<Element Index="[177]" Value="0"/>
<Element Index="[178]" Value="0"/>
<Element Index="[179]" Value="0"/>
<Element Index="[180]" Value="0"/>
<Element Index="[181]" Value="0"/>
<Element Index="[182]" Value="0"/>
<Element Index="[183]" Value="0"/>
<Element Index="[184]" Value="0"/>
<Element Index="[185]" Value="0"/>
<Element Index="[186]" Value="0"/>
<Element Index="[187]" Value="0"/>
<Element Index="[188]" Value="0"/>
<Element Index="[189]" Value="0"/>
<Element Index="[190]" Value="0"/>
<Element Index="[191]" Value="0"/>
<Element Index="[192]" Value="0"/>
<Element Index="[193]" Value="0"/>
<Element Index="[194]" Value="0"/>
<Element Index="[195]" Value="0"/>
<Element Index="[196]" Value="0"/>
<Element Index="[197]" Value="0"/>
<Element Index="[198]" Value="0"/>
<Element Index="[199]" Value="0"/>
<Element Index="[200]" Value="0"/>
<Element Index="[201]" Value="0"/>
<Element Index="[202]" Value="0"/>
<Element Index="[203]" Value="0"/>
<Element Index="[204]" Value="0"/>
<Element Index="[205]" Value="0"/>
<Element Index="[206]" Value="0"/>
<Element Index="[207]" Value="0"/>
<Element Index="[208]" Value="0"/>
<Element Index="[209]" Value="0"/>
<Element Index="[210]" Value="0"/>
<Element Index="[211]" Value="0"/>
<Element Index="[212]" Value="0"/>
<Element Index="[213]" Value="0"/>
<Element Index="[214]" Value="0"/>
<Element Index="[215]" Value="0"/>
<Element Index="[216]" Value="0"/>
<Element Index="[217]" Value="0"/>
<Element Index="[218]" Value="0"/>
<Element Index="[219]" Value="0"/>
<Element Index="[220]" Value="0"/>
<Element Index="[221]" Value="0"/>
<Element Index="[222]" Value="0"/>
<Element Index="[223]" Value="0"/>
<Element Index="[224]" Value="0"/>
<Element Index="[225]" Value="0"/>
<Element Index="[226]" Value="0"/>
<Element Index="[227]" Value="0"/>
<Element Index="[228]" Value="0"/>
<Element Index="[229]" Value="0"/>
<Element Index="[230]" Value="0"/>
<Element Index="[231]" Value="0"/>
<Element Index="[232]" Value="0"/>
<Element Index="[233]" Value="0"/>
<Element Index="[234]" Value="0"/>
<Element Index="[235]" Value="0"/>
<Element Index="[236]" Value="0"/>
<Element Index="[237]" Value="0"/>
<Element Index="[238]" Value="0"/>
<Element Index="[239]" Value="0"/>
<Element Index="[240]" Value="0"/>
<Element Index="[241]" Value="0"/>
<Element Index="[242]" Value="0"/>
<Element Index="[243]" Value="0"/>
<Element Index="[244]" Value="0"/>
<Element Index="[245]" Value="0"/>
<Element Index="[246]" Value="0"/>
<Element Index="[247]" Value="0"/>
<Element Index="[248]" Value="0"/>
<Element Index="[249]" Value="0"/>
<Element Index="[250]" Value="0"/>
<Element Index="[251]" Value="0"/>
<Element Index="[252]" Value="0"/>
<Element Index="[253]" Value="0"/>
<Element Index="[254]" Value="0"/>
<Element Index="[255]" Value="0"/>
<Element Index="[256]" Value="0"/>
<Element Index="[257]" Value="0"/>
<Element Index="[258]" Value="0"/>
<Element Index="[259]" Value="0"/>
<Element Index="[260]" Value="0"/>
<Element Index="[261]" Value="0"/>
<Element Index="[262]" Value="0"/>
<Element Index="[263]" Value="0"/>
<Element Index="[264]" Value="0"/>
<Element Index="[265]" Value="0"/>
<Element Index="[266]" Value="0"/>
<Element Index="[267]" Value="0"/>
<Element Index="[268]" Value="0"/>
<Element Index="[269]" Value="0"/>
<Element Index="[270]" Value="0"/>
<Element Index="[271]" Value="0"/>
<Element Index="[272]" Value="0"/>
<Element Index="[273]" Value="0"/>
<Element Index="[274]" Value="0"/>
<Element Index="[275]" Value="0"/>
<Element Index="[276]" Value="0"/>
<Element Index="[277]" Value="0"/>
<Element Index="[278]" Value="0"/>
<Element Index="[279]" Value="0"/>
<Element Index="[280]" Value="0"/>
<Element Index="[281]" Value="0"/>
<Element Index="[282]" Value="0"/>
<Element Index="[283]" Value="0"/>
<Element Index="[284]" Value="0"/>
<Element Index="[285]" Value="0"/>
<Element Index="[286]" Value="0"/>
<Element Index="[287]" Value="0"/>
<Element Index="[288]" Value="0"/>
<Element Index="[289]" Value="0"/>
<Element Index="[290]" Value="0"/>
<Element Index="[291]" Value="0"/>
<Element Index="[292]" Value="0"/>
<Element Index="[293]" Value="0"/>
<Element Index="[294]" Value="0"/>
<Element Index="[295]" Value="0"/>
<Element Index="[296]" Value="0"/>
<Element Index="[297]" Value="0"/>
<Element Index="[298]" Value="0"/>
<Element Index="[299]" Value="0"/>
<Element Index="[300]" Value="0"/>
<Element Index="[301]" Value="0"/>
<Element Index="[302]" Value="0"/>
<Element Index="[303]" Value="0"/>
<Element Index="[304]" Value="0"/>
<Element Index="[305]" Value="0"/>
<Element Index="[306]" Value="0"/>
<Element Index="[307]" Value="0"/>
<Element Index="[308]" Value="0"/>
<Element Index="[309]" Value="0"/>
<Element Index="[310]" Value="0"/>
<Element Index="[311]" Value="0"/>
<Element Index="[312]" Value="0"/>
<Element Index="[313]" Value="0"/>
<Element Index="[314]" Value="0"/>
<Element Index="[315]" Value="0"/>
<Element Index="[316]" Value="0"/>
<Element Index="[317]" Value="0"/>
<Element Index="[318]" Value="0"/>
<Element Index="[319]" Value="0"/>
<Element Index="[320]" Value="0"/>
<Element Index="[321]" Value="0"/>
<Element Index="[322]" Value="0"/>
<Element Index="[323]" Value="0"/>
<Element Index="[324]" Value="0"/>
<Element Index="[325]" Value="0"/>
<Element Index="[326]" Value="0"/>
<Element Index="[327]" Value="0"/>
<Element Index="[328]" Value="0"/>
<Element Index="[329]" Value="0"/>
<Element Index="[330]" Value="0"/>
<Element Index="[331]" Value="0"/>
<Element Index="[332]" Value="0"/>
<Element Index="[333]" Value="0"/>
<Element Index="[334]" Value="0"/>
<Element Index="[335]" Value="0"/>
<Element Index="[336]" Value="0"/>
<Element Index="[337]" Value="0"/>
<Element Index="[338]" Value="0"/>
<Element Index="[339]" Value="0"/>
<Element Index="[340]" Value="0"/>
<Element Index="[341]" Value="0"/>
<Element Index="[342]" Value="0"/>
<Element Index="[343]" Value="0"/>
<Element Index="[344]" Value="0"/>
<Element Index="[345]" Value="0"/>
<Element Index="[346]" Value="0"/>
<Element Index="[347]" Value="0"/>
<Element Index="[348]" Value="0"/>
<Element Index="[349]" Value="0"/>
<Element Index="[350]" Value="0"/>
<Element Index="[351]" Value="0"/>
<Element Index="[352]" Value="0"/>
<Element Index="[353]" Value="0"/>
<Element Index="[354]" Value="0"/>
<Element Index="[355]" Value="0"/>
<Element Index="[356]" Value="0"/>
<Element Index="[357]" Value="0"/>
<Element Index="[358]" Value="0"/>
<Element Index="[359]" Value="0"/>
<Element Index="[360]" Value="0"/>
<Element Index="[361]" Value="0"/>
<Element Index="[362]" Value="0"/>
<Element Index="[363]" Value="0"/>
<Element Index="[364]" Value="0"/>
<Element Index="[365]" Value="0"/>
<Element Index="[366]" Value="0"/>
<Element Index="[367]" Value="0"/>
<Element Index="[368]" Value="0"/>
<Element Index="[369]" Value="0"/>
<Element Index="[370]" Value="0"/>
<Element Index="[371]" Value="0"/>
<Element Index="[372]" Value="0"/>
<Element Index="[373]" Value="0"/>
<Element Index="[374]" Value="0"/>
<Element Index="[375]" Value="0"/>
<Element Index="[376]" Value="0"/>
<Element Index="[377]" Value="0"/>
<Element Index="[378]" Value="0"/>
<Element Index="[379]" Value="0"/>
<Element Index="[380]" Value="0"/>
<Element Index="[381]" Value="0"/>
<Element Index="[382]" Value="0"/>
<Element Index="[383]" Value="0"/>
<Element Index="[384]" Value="0"/>
<Element Index="[385]" Value="0"/>
<Element Index="[386]" Value="0"/>
<Element Index="[387]" Value="0"/>
<Element Index="[388]" Value="0"/>
<Element Index="[389]" Value="0"/>
<Element Index="[390]" Value="0"/>
<Element Index="[391]" Value="0"/>
<Element Index="[392]" Value="0"/>
<Element Index="[393]" Value="0"/>
<Element Index="[394]" Value="0"/>
<Element Index="[395]" Value="0"/>
<Element Index="[396]" Value="0"/>
<Element Index="[397]" Value="0"/>
<Element Index="[398]" Value="0"/>
<Element Index="[399]" Value="0"/>
<Element Index="[400]" Value="0"/>
<Element Index="[401]" Value="0"/>
<Element Index="[402]" Value="0"/>
<Element Index="[403]" Value="0"/>
<Element Index="[404]" Value="0"/>
<Element Index="[405]" Value="0"/>
<Element Index="[406]" Value="0"/>
<Element Index="[407]" Value="0"/>
<Element Index="[408]" Value="0"/>
<Element Index="[409]" Value="0"/>
<Element Index="[410]" Value="0"/>
<Element Index="[411]" Value="0"/>
<Element Index="[412]" Value="0"/>
<Element Index="[413]" Value="0"/>
<Element Index="[414]" Value="0"/>
<Element Index="[415]" Value="0"/>
<Element Index="[416]" Value="0"/>
<Element Index="[417]" Value="0"/>
<Element Index="[418]" Value="0"/>
<Element Index="[419]" Value="0"/>
<Element Index="[420]" Value="0"/>
<Element Index="[421]" Value="0"/>
<Element Index="[422]" Value="0"/>
<Element Index="[423]" Value="0"/>
<Element Index="[424]" Value="0"/>
<Element Index="[425]" Value="0"/>
<Element Index="[426]" Value="0"/>
<Element Index="[427]" Value="0"/>
<Element Index="[428]" Value="0"/>
<Element Index="[429]" Value="0"/>
<Element Index="[430]" Value="0"/>
<Element Index="[431]" Value="0"/>
<Element Index="[432]" Value="0"/>
<Element Index="[433]" Value="0"/>
<Element Index="[434]" Value="0"/>
<Element Index="[435]" Value="0"/>
<Element Index="[436]" Value="0"/>
<Element Index="[437]" Value="0"/>
<Element Index="[438]" Value="0"/>
<Element Index="[439]" Value="0"/>
<Element Index="[440]" Value="0"/>
<Element Index="[441]" Value="0"/>
<Element Index="[442]" Value="0"/>
<Element Index="[443]" Value="0"/>
<Element Index="[444]" Value="0"/>
<Element Index="[445]" Value="0"/>
<Element Index="[446]" Value="0"/>
<Element Index="[447]" Value="0"/>
<Element Index="[448]" Value="0"/>
<Element Index="[449]" Value="0"/>
<Element Index="[450]" Value="0"/>
<Element Index="[451]" Value="0"/>
<Element Index="[452]" Value="0"/>
<Element Index="[453]" Value="0"/>
<Element Index="[454]" Value="0"/>
<Element Index="[455]" Value="0"/>
<Element Index="[456]" Value="0"/>
<Element Index="[457]" Value="0"/>
<Element Index="[458]" Value="0"/>
<Element Index="[459]" Value="0"/>
<Element Index="[460]" Value="0"/>
<Element Index="[461]" Value="0"/>
<Element Index="[462]" Value="0"/>
<Element Index="[463]" Value="0"/>
<Element Index="[464]" Value="0"/>
<Element Index="[465]" Value="0"/>
<Element Index="[466]" Value="0"/>
<Element Index="[467]" Value="0"/>
<Element Index="[468]" Value="0"/>
<Element Index="[469]" Value="0"/>
<Element Index="[470]" Value="0"/>
<Element Index="[471]" Value="0"/>
<Element Index="[472]" Value="0"/>
<Element Index="[473]" Value="0"/>
<Element Index="[474]" Value="0"/>
<Element Index="[475]" Value="0"/>
<Element Index="[476]" Value="0"/>
<Element Index="[477]" Value="0"/>
<Element Index="[478]" Value="0"/>
<Element Index="[479]" Value="0"/>
<Element Index="[480]" Value="0"/>
<Element Index="[481]" Value="0"/>
<Element Index="[482]" Value="0"/>
<Element Index="[483]" Value="0"/>
</ArrayMember>
</StructureMember>
<StructureMember Name="Read_Response_Timer" DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="EN" DataType="BOOL" Value="1"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="1"/>
</StructureMember>
<DataValueMember Name="ONS" DataType="DINT" Radix="Decimal" Value="3"/>
<StructureMember Name="Error_Retry_Timer" DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="30000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</StructureMember>
<DataValueMember Name="Retrying" DataType="BOOL" Value="0"/>
<DataValueMember Name="Send_Packet_Req" DataType="BOOL" Value="0"/>
<DataValueMember Name="Enable_COMMs" DataType="BOOL" Value="1"/>
</Structure>
</Data>
</Tag>
<Tag Name="SNMP_Input_Data" TagType="Base" DataType="SLO_SNMP_Request_Data" Dimensions="16" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[CONFIGURE SNMP OIDs/IPs HERE]]>
</Description>
<Comments>
<Comment Operand="[0]">
<![CDATA[UPS Input Voltage (x10)]]>
</Comment>
<Comment Operand="[1]">
<![CDATA[UPS Input Frequency]]>
</Comment>
<Comment Operand="[2]">
<![CDATA[UPS Battery Time Remaining (Seconds)]]>
</Comment>
<Comment Operand="[3]">
<![CDATA[UPS Battery Capacity %]]>
</Comment>
<Comment Operand="[4]">
<![CDATA[UPS Number of Current Alarms]]>
</Comment>
<Comment Operand="[5]">
<![CDATA[UPS Alarm - On Battery]]>
</Comment>
<Comment Operand="[6]">
<![CDATA[UPS Alarm - Low Battery]]>
</Comment>
<Comment Operand="[7]">
<![CDATA[UPS Alarm - Output Overload]]>
</Comment>
<Comment Operand="[8]">
<![CDATA[UPS Alarm - Internal Failure]]>
</Comment>
<Comment Operand="[9]">
<![CDATA[UPS Alarm - Ambient Temp Bad]]>
</Comment>
</Comments>
<Data Format="L5K">
<![CDATA[[[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[25,'1.3.6.1.4.1.534.1.3.4.1.2$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],10,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.3.1$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],11,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.2.1$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],12,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.2.4$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],13,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.7.1$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],14,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.7.3$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],15,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.7.4$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],16,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.7.7$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],17,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[21,'1.3.6.1.4.1.534.1.7.8$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],18,1],[[13,'192.168.20.30$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[6,'public$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[22,'1.3.6.1.4.1.534.1.7.29$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],19,1],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],0,0]]]]>
</Data>
<Data Format="Decorated">
<Array DataType="SLO_SNMP_Request_Data" Dimensions="16">
<Element Index="[0]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="25"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.3.4.1.2']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="10"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.3.1']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="11"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.2.1']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="12"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.2.4']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.1']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="14"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.3']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="15"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.4']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="16"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.7']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="17"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="21"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.8']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="18"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="13"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['192.168.20.30']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="22"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.7.29']]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="19"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="1"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="SLO_SNMP_Request_Data">
<StructureMember Name="IP_Address" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="RequestID" DataType="SINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Enabled" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="SNMP_Input_Parser" TagType="Base" DataType="SLO_SNMP_Packet_Build" Constant="false" ExternalAccess="None">
<Data Format="L5K">
<![CDATA[[0,42,12,-1407896571,10,9,42,14,25,27,1,21,29,1,[1,'134435455$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[1,3,5,7,9,11,15,17,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="SLO_SNMP_Packet_Build">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="0"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="BufLen" DataType="DINT" Radix="Decimal" Value="42"/>
<DataValueMember Name="RequestID" DataType="INT" Radix="Decimal" Value="12"/>
<DataValueMember Name="IP_Address_Out" DataType="DINT" Radix="Decimal" Value="-1407896571"/>
<DataValueMember Name="IP_Address_Invalid" DataType="BOOL" Value="0"/>
<DataValueMember Name="OID_Invalid" DataType="BOOL" Value="0"/>
<DataValueMember Name="RequestID_Invalid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="SNMP_Output" TagType="Base" DataType="SLO_SNMP_Response_Data" Constant="false" ExternalAccess="None">
<Data Format="L5K">
<![CDATA[[[6,'public$00$00publicpublicc$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[24,'1.3.6.1.4.1.534.1.2.1.0.$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],9820,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],2,0]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="SLO_SNMP_Response_Data">
<StructureMember Name="Community" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="6"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['public']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="OID" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="24"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA['1.3.6.1.4.1.534.1.2.1.0.']]>
</DataValueMember>
</StructureMember>
<StructureMember Name="String" DataType="STRING">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
<DataValueMember Name="DINT" DataType="DINT" Radix="Decimal" Value="9820"/>
<ArrayMember Name="Bytes" DataType="SINT" Dimensions="128" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
<Element Index="[3]" Value="0"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="0"/>
<Element Index="[6]" Value="0"/>
<Element Index="[7]" Value="0"/>
<Element Index="[8]" Value="0"/>
<Element Index="[9]" Value="0"/>
<Element Index="[10]" Value="0"/>
<Element Index="[11]" Value="0"/>
<Element Index="[12]" Value="0"/>
<Element Index="[13]" Value="0"/>
<Element Index="[14]" Value="0"/>
<Element Index="[15]" Value="0"/>
<Element Index="[16]" Value="0"/>
<Element Index="[17]" Value="0"/>
<Element Index="[18]" Value="0"/>
<Element Index="[19]" Value="0"/>
<Element Index="[20]" Value="0"/>
<Element Index="[21]" Value="0"/>
<Element Index="[22]" Value="0"/>
<Element Index="[23]" Value="0"/>
<Element Index="[24]" Value="0"/>
<Element Index="[25]" Value="0"/>
<Element Index="[26]" Value="0"/>
<Element Index="[27]" Value="0"/>
<Element Index="[28]" Value="0"/>
<Element Index="[29]" Value="0"/>
<Element Index="[30]" Value="0"/>
<Element Index="[31]" Value="0"/>
<Element Index="[32]" Value="0"/>
<Element Index="[33]" Value="0"/>
<Element Index="[34]" Value="0"/>
<Element Index="[35]" Value="0"/>
<Element Index="[36]" Value="0"/>
<Element Index="[37]" Value="0"/>
<Element Index="[38]" Value="0"/>
<Element Index="[39]" Value="0"/>
<Element Index="[40]" Value="0"/>
<Element Index="[41]" Value="0"/>
<Element Index="[42]" Value="0"/>
<Element Index="[43]" Value="0"/>
<Element Index="[44]" Value="0"/>
<Element Index="[45]" Value="0"/>
<Element Index="[46]" Value="0"/>
<Element Index="[47]" Value="0"/>
<Element Index="[48]" Value="0"/>
<Element Index="[49]" Value="0"/>
<Element Index="[50]" Value="0"/>
<Element Index="[51]" Value="0"/>
<Element Index="[52]" Value="0"/>
<Element Index="[53]" Value="0"/>
<Element Index="[54]" Value="0"/>
<Element Index="[55]" Value="0"/>
<Element Index="[56]" Value="0"/>
<Element Index="[57]" Value="0"/>
<Element Index="[58]" Value="0"/>
<Element Index="[59]" Value="0"/>
<Element Index="[60]" Value="0"/>
<Element Index="[61]" Value="0"/>
<Element Index="[62]" Value="0"/>
<Element Index="[63]" Value="0"/>
<Element Index="[64]" Value="0"/>
<Element Index="[65]" Value="0"/>
<Element Index="[66]" Value="0"/>
<Element Index="[67]" Value="0"/>
<Element Index="[68]" Value="0"/>
<Element Index="[69]" Value="0"/>
<Element Index="[70]" Value="0"/>
<Element Index="[71]" Value="0"/>
<Element Index="[72]" Value="0"/>
<Element Index="[73]" Value="0"/>
<Element Index="[74]" Value="0"/>
<Element Index="[75]" Value="0"/>
<Element Index="[76]" Value="0"/>
<Element Index="[77]" Value="0"/>
<Element Index="[78]" Value="0"/>
<Element Index="[79]" Value="0"/>
<Element Index="[80]" Value="0"/>
<Element Index="[81]" Value="0"/>
<Element Index="[82]" Value="0"/>
<Element Index="[83]" Value="0"/>
<Element Index="[84]" Value="0"/>
<Element Index="[85]" Value="0"/>
<Element Index="[86]" Value="0"/>
<Element Index="[87]" Value="0"/>
<Element Index="[88]" Value="0"/>
<Element Index="[89]" Value="0"/>
<Element Index="[90]" Value="0"/>
<Element Index="[91]" Value="0"/>
<Element Index="[92]" Value="0"/>
<Element Index="[93]" Value="0"/>
<Element Index="[94]" Value="0"/>
<Element Index="[95]" Value="0"/>
<Element Index="[96]" Value="0"/>
<Element Index="[97]" Value="0"/>
<Element Index="[98]" Value="0"/>
<Element Index="[99]" Value="0"/>
<Element Index="[100]" Value="0"/>
<Element Index="[101]" Value="0"/>
<Element Index="[102]" Value="0"/>
<Element Index="[103]" Value="0"/>
<Element Index="[104]" Value="0"/>
<Element Index="[105]" Value="0"/>
<Element Index="[106]" Value="0"/>
<Element Index="[107]" Value="0"/>
<Element Index="[108]" Value="0"/>
<Element Index="[109]" Value="0"/>
<Element Index="[110]" Value="0"/>
<Element Index="[111]" Value="0"/>
<Element Index="[112]" Value="0"/>
<Element Index="[113]" Value="0"/>
<Element Index="[114]" Value="0"/>
<Element Index="[115]" Value="0"/>
<Element Index="[116]" Value="0"/>
<Element Index="[117]" Value="0"/>
<Element Index="[118]" Value="0"/>
<Element Index="[119]" Value="0"/>
<Element Index="[120]" Value="0"/>
<Element Index="[121]" Value="0"/>
<Element Index="[122]" Value="0"/>
<Element Index="[123]" Value="0"/>
<Element Index="[124]" Value="0"/>
<Element Index="[125]" Value="0"/>
<Element Index="[126]" Value="0"/>
<Element Index="[127]" Value="0"/>
</ArrayMember>
<DataValueMember Name="Is_String" DataType="BOOL" Value="0"/>
<DataValueMember Name="Is_DINT" DataType="BOOL" Value="1"/>
<DataValueMember Name="Is_Other" DataType="BOOL" Value="0"/>
<DataValueMember Name="ErrorValue" DataType="INT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="SNMP_Output_Parser" TagType="Base" DataType="SLO_SNMP_Packet_Parse" Constant="false" ExternalAccess="None">
<Data Format="L5K">
<![CDATA[[4,12,9820,0,2,2,0,0,0,12,2,43,43,6,30,0,0,19,17,0,11,534,[1,'0$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[1,'.$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[3,'1.3$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
		],[92,38,0,0]]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="SLO_SNMP_Packet_Parse">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="0"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="SNMP_RequestID" DataType="INT" Radix="Decimal" Value="12"/>
<DataValueMember Name="Output_Is_Integer" DataType="BOOL" Value="1"/>
<DataValueMember Name="Output_Is_String" DataType="BOOL" Value="0"/>
<DataValueMember Name="Output_Is_Other" DataType="BOOL" Value="0"/>
<DataValueMember Name="Output_DINT" DataType="DINT" Radix="Decimal" Value="9820"/>
<DataValueMember Name="Response_Invalid" DataType="BOOL" Value="0"/>
<DataValueMember Name="Response_Invalid_Location" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Output_Type" DataType="INT" Radix="Decimal" Value="2"/>
<DataValueMember Name="SNMP_Output_Length" DataType="INT" Radix="Decimal" Value="2"/>
<DataValueMember Name="SNMP_Version" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="SNMP_Response_Error_Value" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="SNMP_Version_Invalid" DataType="BOOL" Value="0"/>
<DataValueMember Name="Response_Invalid_Section" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Request_Response_Mismatch" DataType="BOOL" Value="0"/>
<DataValueMember Name="SNMP_Response_RequestID" DataType="INT" Radix="Decimal" Value="12"/>
</Structure>
</Data>
</Tag>
<Tag Name="SNMP_Socket_CreateMessage" TagType="Base" DataType="MESSAGE" ExternalAccess="None">
<Description>
<![CDATA[Create Connection Message]]>
</Description>
<Data Format="Message">
<MessageParameters MessageType="CIP Generic" RequestedLength="12" ConnectedFlag="2" ConnectionPath="1, 0" CommTypeCode="0" ServiceCode="16#004b" ObjectType="16#0342" TargetObject="0" AttributeNumber="16#0000" LocalIndex="0" LocalElement="SNMP_ConnectionData.Socket_Create_Input"
 DestinationTag="SNMP_ConnectionData.Socket_Create_Output" LargePacketUsage="false"/>
</Data>
</Tag>
<Tag Name="SNMP_Socket_DeleteAllMessage" TagType="Base" DataType="MESSAGE" ExternalAccess="None">
<Description>
<![CDATA[Clear Open Connections Message]]>
</Description>
<Data Format="Message">
<MessageParameters MessageType="CIP Generic" RequestedLength="0" ConnectedFlag="2" ConnectionPath="1, 0" CommTypeCode="0" ServiceCode="16#0051" ObjectType="16#0342" TargetObject="0" AttributeNumber="16#0000" LocalIndex="0" LargePacketUsage="false"
/>
</Data>
</Tag>
<Tag Name="SNMP_Socket_ReadMessage" TagType="Base" DataType="MESSAGE" ExternalAccess="None">
<Description>
<![CDATA[SNMP Packet Read Message]]>
</Description>
<Data Format="Message">
<MessageParameters MessageType="CIP Generic" RequestedLength="8" ConnectedFlag="2" ConnectionPath="1, 0" CommTypeCode="0" ServiceCode="16#004d" ObjectType="16#0342" TargetObject="21131" AttributeNumber="16#0000" LocalIndex="0" LocalElement="SNMP_ConnectionData.Socket_Read_Input"
 DestinationTag="SNMP_ConnectionData.Socket_Read_Output" LargePacketUsage="false"/>
</Data>
</Tag>
<Tag Name="SNMP_Socket_WriteMessage" TagType="Base" DataType="MESSAGE" ExternalAccess="None">
<Description>
<![CDATA[SNMP Packet Send Message]]>
</Description>
<Data Format="Message">
<MessageParameters MessageType="CIP Generic" RequestedLength="58" ConnectedFlag="2" ConnectionPath="1, 0" CommTypeCode="0" ServiceCode="16#004e" ObjectType="16#0342" TargetObject="21131" AttributeNumber="16#0000" LocalIndex="0" LocalElement="SNMP_ConnectionData.Socket_Write_Input"
 DestinationTag="SNMP_ConnectionData.Socket_Write_Output" LargePacketUsage="false"/>
</Data>
</Tag>
<Tag Name="UPS" TagType="Base" DataType="SLO_Eaton_UPS_Data" Constant="false" ExternalAccess="Read Only">
<Data Format="L5K">
<![CDATA[[119,100,6.00000000e+001,1.63666672e+002,0,0]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="SLO_Eaton_UPS_Data">
<DataValueMember Name="Input_Voltage" DataType="INT" Radix="Decimal" Value="119"/>
<DataValueMember Name="Battery_Capacity" DataType="INT" Radix="Decimal" Value="100"/>
<DataValueMember Name="Input_Frequency" DataType="REAL" Radix="Float" Value="60.0"/>
<DataValueMember Name="Battery_Runtime_Remain" DataType="REAL" Radix="Float" Value="163.66667"/>
<DataValueMember Name="Alarm_Count" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="On_Battery_Alarm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Low_Battery_Alarm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Output_Overload_Alarm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Internal_Failure_Alarm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Temp_Bad" DataType="BOOL" Value="0"/>
<DataValueMember Name="COMM_Fault" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Programs Use="Context">
<Program Use="Target" Name="EatonUPS" TestEdits="false" MainRoutineName="Main" Disabled="false" UseAsFolder="false">
<Tags>
<Tag Name="Array_Size" TagType="Base" DataType="INT" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[Array Size]]>
</Description>
<Data Format="L5K">
<![CDATA[16]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="16"/>
</Data>
</Tag>
<Tag Name="COMMs_Cooldown_Timer" TagType="Base" DataType="TIMER" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[EatonUPS Communications Cooldown Timer]]>
</Description>
<Data Format="L5K">
<![CDATA[[-1609119706,10000,10000]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="10000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="10000"/>
<DataValueMember Name="EN" DataType="BOOL" Value="1"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="1"/>
</Structure>
</Data>
</Tag>
<Tag Name="COMMs_Timer" TagType="Base" DataType="TIMER" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[EatonUPS Communications Timer]]>
</Description>
<Data Format="L5K">
<![CDATA[[-1609119710,2000,2000]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="2000"/>
<DataValueMember Name="EN" DataType="BOOL" Value="1"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="1"/>
</Structure>
</Data>
</Tag>
<Tag Name="Index" TagType="Base" DataType="DINT" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[EatonUPS MIB Array Index]]>
</Description>
<Data Format="L5K">
<![CDATA[3]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</Data>
</Tag>
<Tag Name="Index_Start" TagType="Base" DataType="INT" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[Starting position for infinite loop detection]]>
</Description>
<Data Format="L5K">
<![CDATA[3]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="3"/>
</Data>
</Tag>
<Tag Name="ONS" TagType="Base" DataType="DINT" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[EatonUPS Oneshots]]>
</Description>
<Comments>
<Comment Operand=".3">
<![CDATA[Packet Build Oneshot]]>
</Comment>
<Comment Operand=".4">
<![CDATA[Increment Index Oneshot]]>
</Comment>
<Comment Operand=".5">
<![CDATA[SNMP Parse Message Oneshot]]>
</Comment>
</Comments>
<Data Format="L5K">
<![CDATA[184]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="184"/>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="IncrementIndex" Type="ST">
<Description>
<![CDATA[Increments to the next enabled index]]>
</Description>
<STContent>
<Line Number="0">
<![CDATA[/* IncrementIndex]]>
</Line>
<Line Number="1">
<![CDATA[	2019 by Jason Dornish]]>
</Line>
<Line Number="2">
<![CDATA[	Increments to the next available index.]]>
</Line>
<Line Number="3">
<![CDATA[	Written in ST for For loops.]]>
</Line>
<Line Number="4">
<![CDATA[*/]]>
</Line>
<Line Number="5">
<![CDATA[SIZE(SNMP_Input_Data,0,Array_Size);	// Find the array size]]>
</Line>
<Line Number="6">
<![CDATA[]]>
</Line>
<Line Number="7">
<![CDATA[Index := Index + 1;			// Increment the index]]>
</Line>
<Line Number="8">
<![CDATA[IF Index >= Array_Size THEN	// Reset the Index if we've hit the max]]>
</Line>
<Line Number="9">
<![CDATA[	Index := 0;]]>
</Line>
<Line Number="10">
<![CDATA[END_IF;]]>
</Line>
<Line Number="11">
<![CDATA[]]>
</Line>
<Line Number="12">
<![CDATA[Index_Start := Index;						// Note where we started for infinite loop detection]]>
</Line>
<Line Number="13">
<![CDATA[WHILE NOT SNMP_Input_Data[Index].Enabled DO	// If the index is not enabled, find the next one that is.]]>
</Line>
<Line Number="14">
<![CDATA[	Index := Index + 1;	]]>
</Line>
<Line Number="15">
<![CDATA[	IF Index >= Array_Size THEN				//If we've reached the end of the array, reset to beginning and continue]]>
</Line>
<Line Number="16">
<![CDATA[		Index := 0;]]>
</Line>
<Line Number="17">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="18">
<![CDATA[	IF Index = Index_Start THEN				// If we are back where we started with no enabled element, stop (infinite loop prevention)]]>
</Line>
<Line Number="19">
<![CDATA[		Exit;]]>
</Line>
<Line Number="20">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="21">
<![CDATA[END_WHILE;]]>
</Line>
<Line Number="22">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
<Routine Name="Main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[JSR(SNMPPacketCreate,0);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[JSR(SNMPConnect,0);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[JSR(SNMPPacketParse,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="SNMPConnect" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[SNMPConnect
2019 by Jason Dornish 
Manages Socket connections, sends and receives packets upon request.
Automatically manages error states by resetting Socket Communications and clearing data.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Open the socket on the controller.
This only needs to run if an error is encountered, and once the Retrying mode completes.]]>
</Comment>
<Text>
<![CDATA[XIC(SNMP_ConnectionData.Enable_COMMs)XIO(SNMP_ConnectionData.Retrying)[ONS(SNMP_ConnectionData.ONS.0) ,XIO(SNMP_Socket_CreateMessage.DN) XIO(SNMP_Socket_CreateMessage.ER) ]MSG(SNMP_Socket_CreateMessage);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Copy MSG Instance #'s from the Socket Create to the other messages - 
Necessary for ensuring the messages use the correct Socket instance.]]>
</Comment>
<Text>
<![CDATA[[MOV(SNMP_ConnectionData.Socket_Create_Output,SNMP_Socket_WriteMessage.Instance) ,MOV(SNMP_ConnectionData.Socket_Create_Output,SNMP_Socket_ReadMessage.Instance) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Add the packet data length to the 16 (header length) to create the length of the packet we will send.]]>
</Comment>
<Text>
<![CDATA[ADD(SNMP_ConnectionData.Socket_Write_Input.BufLen,16,SNMP_Socket_WriteMessage.REQ_LEN);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Send the request IP Packet]]>
</Comment>
<Text>
<![CDATA[[XIC(SNMP_ConnectionData.Send_Packet_Req) ,XIO(SNMP_Socket_WriteMessage.DN) XIO(SNMP_Socket_WriteMessage.ER) ]XIO(SNMP_ConnectionData.Retrying)MSG(SNMP_Socket_WriteMessage);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Once the write has processed, and a reasonable delay has passed, read the response IP Packet.]]>
</Comment>
<Text>
<![CDATA[XIC(SNMP_Socket_WriteMessage.DN)XIO(SNMP_ConnectionData.Retrying)[TON(SNMP_ConnectionData.Read_Response_Timer,?,?) ,XIC(SNMP_ConnectionData.Read_Response_Timer.DN) [ONS(SNMP_ConnectionData.ONS.1) ,XIO(SNMP_Socket_ReadMessage.DN) XIO(SNMP_Socket_ReadMessage.ER) ] MSG(SNMP_Socket_ReadMessage) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Deletes all open sockets and clears data on errors, or first scan.
Once clear, the Retrying bit is latched for 30 seconds to pause communications temporarily]]>
</Comment>
<Text>
<![CDATA[XIO(COMMs_Cooldown_Timer.TT)[XIC(SNMP_Socket_CreateMessage.ER) [ONS(SNMP_ConnectionData.ONS.2) ,XIO(SNMP_Socket_DeleteAllMessage.DN) XIO(SNMP_Socket_DeleteAllMessage.ER) ] ,XIC(SNMP_Socket_WriteMessage.ER) [ONS(SNMP_ConnectionData.ONS.6) ,XIO(SNMP_Socket_DeleteAllMessage.DN) XIO(SNMP_Socket_DeleteAllMessage.ER) ] ,XIC(SNMP_Socket_ReadMessage.ER) [ONS(SNMP_ConnectionData.ONS.7) ,XIO(SNMP_Socket_DeleteAllMessage.DN) XIO(SNMP_Socket_DeleteAllMessage.ER) ] ,XIC(S:FS) [ONS(SNMP_ConnectionData.ONS.8) ,XIO(SNMP_Socket_DeleteAllMessage.DN) XIO(SNMP_Socket_DeleteAllMessage.ER) ] ][MSG(SNMP_Socket_DeleteAllMessage) ,FLL(0,SNMP_ConnectionData.Socket_Write_Input.Buf[0],484) ,FLL(0,SNMP_ConnectionData.Socket_Read_Output.Buf[0],484) ,OTL(SNMP_ConnectionData.Retrying) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Upon an error, start a 30 second timer before retrying.]]>
</Comment>
<Text>
<![CDATA[XIC(SNMP_ConnectionData.Retrying)[TON(SNMP_ConnectionData.Error_Retry_Timer,?,?) ,XIC(SNMP_ConnectionData.Error_Retry_Timer.DN) OTU(SNMP_ConnectionData.Retrying) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[Wait 10 seconds before allowing Retrying mode to re-engage, to allow a successful communication attempt]]>
</Comment>
<Text>
<![CDATA[XIO(SNMP_ConnectionData.Retrying)TON(COMMs_Cooldown_Timer,?,?);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="SNMPPacketCreate" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[SNMP Packet Create
2019 by Jason Dornish
Creates SNMP Packet from Input Data array.  
Builds the packet specified at the current Index, and calls a request for a Socket Write to send the packet.

Currently has a hard-coded 2 second delay minimum between packets.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[When the Read Message has finished, start the COMMs timer to send another message
Do not start if we are in COMM failure retry delay]]>
</Comment>
<Text>
<![CDATA[XIC(SNMP_ConnectionData.Enable_COMMs)XIO(SNMP_ConnectionData.Retrying)[XIC(SNMP_ConnectionData.Read_Response_Timer.DN) ,XIO(SNMP_ConnectionData.Retrying) ONS(ONS.7) ,XIC(COMMs_Timer.TT) ]TON(COMMs_Timer,?,?);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[If the COMMs Timer is Done, increment the index count to send the next data request
If the index reaches max, reset it.
If the index has reached a disabled index, skip to next enabled index]]>
</Comment>
<Text>
<![CDATA[XIC(COMMs_Timer.DN)ONS(ONS.4)JSR(IncrementIndex,0);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[If the COMMs timer is done, build the packet to send]]>
</Comment>
<Text>
<![CDATA[XIC(COMMs_Timer.DN)XIC(SNMP_Input_Data[Index].Enabled)ONS(ONS.3)[SLO_SNMP_Packet_Build(SNMP_Input_Parser,SNMP_ConnectionData.Socket_Write_Input.Buf,SNMP_ConnectionData.Socket_Write_Input.BufLen,SNMP_Input_Data[Index].Community,SNMP_Input_Data[Index].OID,SNMP_Input_Data[Index].IP_Address,SNMP_Input_Data[Index].RequestID,SNMP_ConnectionData.Socket_Write_Input.ToAddr.Addr) ,OTE(SNMP_ConnectionData.Send_Packet_Req) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="SNMPPacketParse" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[SNMP Packet Parse
2019 by Jason Dornish
Receives packet data from a Socket Read, and parses it for SNMP.
Outputs either a DINT, String, or flags "Other" to indicate unrecognized data in the packet.

Matches the data requested from the Request ID, and moves it to the correct location.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(SNMP_Socket_ReadMessage.DN)ONS(ONS.5)SLO_SNMP_Packet_Parse(SNMP_Output_Parser,SNMP_ConnectionData.Socket_Read_Output.Buf,SNMP_Output.Community,SNMP_Output.OID,SNMP_Input_Data[Index].RequestID,SNMP_Output.Is_DINT,SNMP_Output.Is_String,SNMP_Output.Is_Other,SNMP_Output.DINT,SNMP_Output.String);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Move the data from the Output to the appropriate place, based on the current request index]]>
</Comment>
<Text>
<![CDATA[XIC(SNMP_Socket_ReadMessage.DN)XIO(SNMP_Output_Parser.Response_Invalid)EQU(SNMP_Output_Parser.SNMP_Response_Error_Value,0)XIC(SNMP_Output.Is_DINT)[EQU(SNMP_Output_Parser.SNMP_Response_RequestID,10) MOV(SNMP_Output.DINT,UPS.Input_Voltage) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,11) DIV(SNMP_Output.DINT,10,UPS.Input_Frequency) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,12) DIV(SNMP_Output.DINT,60,UPS.Battery_Runtime_Remain) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,13) MOV(SNMP_Output.DINT,UPS.Battery_Capacity) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,14) MOV(SNMP_Output.DINT,UPS.Alarm_Count) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,15) XIC(SNMP_Output.DINT.0) OTE(UPS.On_Battery_Alarm) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,16) XIC(SNMP_Output.DINT.0) OTE(UPS.Low_Battery_Alarm) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,17) XIC(SNMP_Output.DINT.0) OTE(UPS.Output_Overload_Alarm) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,18) XIC(SNMP_Output.DINT.0) OTE(UPS.Internal_Failure_Alarm) ,EQU(SNMP_Output_Parser.SNMP_Response_RequestID,19) XIC(SNMP_Output.DINT.0) OTE(UPS.Temp_Bad) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[If there is an issue with COMMs, set the Comm Fault active]]>
</Comment>
<Text>
<![CDATA[[XIC(SNMP_ConnectionData.Retrying) ,XIC(COMMs_Cooldown_Timer.TT) ]OTE(UPS.COMM_Fault);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
</Programs>
</Controller>
</RSLogix5000Content>
